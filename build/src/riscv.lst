GAS LISTING /tmp/ccOzO9kG.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB16:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by os on 6/21/22.
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** 
   6:src/riscv.cpp **** #include "../h/riscv.h"
   7:src/riscv.cpp **** //#include "../h/tcb.hpp"
   8:src/riscv.cpp **** #include "../lib/console.h"
   9:src/riscv.cpp **** 
  10:src/riscv.cpp **** void Riscv::popSppSpie()
  11:src/riscv.cpp **** {
  12              		.loc 1 11 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  12:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 12 5
  21              		.loc 1 12 39 is_stmt 0
  22              	#APP
  23              	# 12 "src/riscv.cpp" 1
  13              	    ms_sstatus(SSTATUS_SPP);
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 13 5 is_stmt 1
  27              	.LVL0:
  28              	#NO_APP
  29              	.LBB4:
  30              	.LBB5:
  31              		.file 2 "src/../h/riscv.h"
   1:src/../h/riscv.h **** //
   2:src/../h/riscv.h **** // Created by os on 6/21/22.
   3:src/../h/riscv.h **** //
   4:src/../h/riscv.h **** 
   5:src/../h/riscv.h **** #ifndef OS_PROJEKAT_RISCV_H
   6:src/../h/riscv.h **** #define OS_PROJEKAT_RISCV_H
   7:src/../h/riscv.h **** 
   8:src/../h/riscv.h **** 
   9:src/../h/riscv.h **** 
  10:src/../h/riscv.h **** #include "../lib/hw.h"
  11:src/../h/riscv.h **** 
  12:src/../h/riscv.h **** class Riscv
  13:src/../h/riscv.h **** {
  14:src/../h/riscv.h **** public:
GAS LISTING /tmp/ccOzO9kG.s 			page 2


  15:src/../h/riscv.h **** 
  16:src/../h/riscv.h ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  17:src/../h/riscv.h ****     static void popSppSpie();
  18:src/../h/riscv.h **** 
  19:src/../h/riscv.h ****     // push x3..x31 registers onto stack
  20:src/../h/riscv.h ****     static void pushRegisters();
  21:src/../h/riscv.h **** 
  22:src/../h/riscv.h ****     // pop x3..x31 registers onto stack
  23:src/../h/riscv.h ****     static void popRegisters();
  24:src/../h/riscv.h **** 
  25:src/../h/riscv.h ****     // read register scause
  26:src/../h/riscv.h ****     static uint64 r_scause();
  27:src/../h/riscv.h **** 
  28:src/../h/riscv.h ****     // write register scause
  29:src/../h/riscv.h ****     static void w_scause(uint64 scause);
  30:src/../h/riscv.h **** 
  31:src/../h/riscv.h ****     // read register sepc
  32:src/../h/riscv.h ****     static uint64 r_sepc();
  33:src/../h/riscv.h **** 
  34:src/../h/riscv.h ****     // write register sepc
  35:src/../h/riscv.h ****     static void w_sepc(uint64 sepc);
  36:src/../h/riscv.h **** 
  37:src/../h/riscv.h ****     // read register stvec
  38:src/../h/riscv.h ****     static uint64 r_stvec();
  39:src/../h/riscv.h **** 
  40:src/../h/riscv.h ****     // write register stvec
  41:src/../h/riscv.h ****     static void w_stvec(uint64 stvec);
  42:src/../h/riscv.h **** 
  43:src/../h/riscv.h ****     // read register stval
  44:src/../h/riscv.h ****     static uint64 r_stval();
  45:src/../h/riscv.h **** 
  46:src/../h/riscv.h ****     // write register stval
  47:src/../h/riscv.h ****     static void w_stval(uint64 stval);
  48:src/../h/riscv.h **** 
  49:src/../h/riscv.h ****     enum BitMaskSip
  50:src/../h/riscv.h ****     {
  51:src/../h/riscv.h ****         SIP_SSIP = (1 << 1),
  52:src/../h/riscv.h ****         SIP_STIP = (1 << 5),
  53:src/../h/riscv.h ****         SIP_SEIP = (1 << 9),
  54:src/../h/riscv.h ****     };
  55:src/../h/riscv.h **** 
  56:src/../h/riscv.h ****     // mask set register sip
  57:src/../h/riscv.h ****     static void ms_sip(uint64 mask);
  58:src/../h/riscv.h **** 
  59:src/../h/riscv.h ****     // mask clear register sip
  60:src/../h/riscv.h ****     static void mc_sip(uint64 mask);
  61:src/../h/riscv.h **** 
  62:src/../h/riscv.h ****     // read register sip
  63:src/../h/riscv.h ****     static uint64 r_sip();
  64:src/../h/riscv.h **** 
  65:src/../h/riscv.h ****     // write register sip
  66:src/../h/riscv.h ****     static void w_sip(uint64 sip);
  67:src/../h/riscv.h **** 
  68:src/../h/riscv.h ****     enum BitMaskSstatus
  69:src/../h/riscv.h ****     {
  70:src/../h/riscv.h ****         SSTATUS_SIE = (1 << 1),
  71:src/../h/riscv.h ****         SSTATUS_SPIE = (1 << 5),
GAS LISTING /tmp/ccOzO9kG.s 			page 3


  72:src/../h/riscv.h ****         SSTATUS_SPP = (1 << 8),
  73:src/../h/riscv.h ****     };
  74:src/../h/riscv.h **** 
  75:src/../h/riscv.h ****     // mask set register sstatus
  76:src/../h/riscv.h ****     static void ms_sstatus(uint64 mask);
  77:src/../h/riscv.h **** 
  78:src/../h/riscv.h ****     // mask clear register sstatus
  79:src/../h/riscv.h ****     static void mc_sstatus(uint64 mask);
  80:src/../h/riscv.h **** 
  81:src/../h/riscv.h ****     // read register sstatus
  82:src/../h/riscv.h ****     static uint64 r_sstatus();
  83:src/../h/riscv.h **** 
  84:src/../h/riscv.h ****     // write register sstatus
  85:src/../h/riscv.h ****     static void w_sstatus(uint64 sstatus);
  86:src/../h/riscv.h **** 
  87:src/../h/riscv.h ****     // supervisor trap
  88:src/../h/riscv.h ****     //static void supervisorTrap();
  89:src/../h/riscv.h **** 
  90:src/../h/riscv.h **** private:
  91:src/../h/riscv.h **** 
  92:src/../h/riscv.h ****     // supervisor trap handler
  93:src/../h/riscv.h ****     //static void handleSupervisorTrap();
  94:src/../h/riscv.h **** 
  95:src/../h/riscv.h **** };
  96:src/../h/riscv.h **** 
  97:src/../h/riscv.h **** inline uint64 Riscv::r_scause()
  98:src/../h/riscv.h **** {
  99:src/../h/riscv.h ****     uint64 scause;
 100:src/../h/riscv.h ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 101:src/../h/riscv.h ****     return scause;
 102:src/../h/riscv.h **** }
 103:src/../h/riscv.h **** 
 104:src/../h/riscv.h **** inline void Riscv::w_scause(uint64 scause)
 105:src/../h/riscv.h **** {
 106:src/../h/riscv.h ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 107:src/../h/riscv.h **** }
 108:src/../h/riscv.h **** 
 109:src/../h/riscv.h **** inline uint64 Riscv::r_sepc()
 110:src/../h/riscv.h **** {
 111:src/../h/riscv.h ****     uint64 volatile sepc;
 112:src/../h/riscv.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 113:src/../h/riscv.h ****     return sepc;
 114:src/../h/riscv.h **** }
 115:src/../h/riscv.h **** 
 116:src/../h/riscv.h **** inline void Riscv::w_sepc(uint64 sepc)
 117:src/../h/riscv.h **** {
 118:src/../h/riscv.h ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 119:src/../h/riscv.h **** }
 120:src/../h/riscv.h **** 
 121:src/../h/riscv.h **** inline uint64 Riscv::r_stvec()
 122:src/../h/riscv.h **** {
 123:src/../h/riscv.h ****     uint64 volatile stvec;
 124:src/../h/riscv.h ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 125:src/../h/riscv.h ****     return stvec;
 126:src/../h/riscv.h **** }
 127:src/../h/riscv.h **** 
 128:src/../h/riscv.h **** inline void Riscv::w_stvec(uint64 stvec)
GAS LISTING /tmp/ccOzO9kG.s 			page 4


 129:src/../h/riscv.h **** {
 130:src/../h/riscv.h ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 131:src/../h/riscv.h **** }
 132:src/../h/riscv.h **** 
 133:src/../h/riscv.h **** inline uint64 Riscv::r_stval()
 134:src/../h/riscv.h **** {
 135:src/../h/riscv.h ****     uint64 volatile stval;
 136:src/../h/riscv.h ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 137:src/../h/riscv.h ****     return stval;
 138:src/../h/riscv.h **** }
 139:src/../h/riscv.h **** 
 140:src/../h/riscv.h **** inline void Riscv::w_stval(uint64 stval)
 141:src/../h/riscv.h **** {
 142:src/../h/riscv.h ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 143:src/../h/riscv.h **** }
 144:src/../h/riscv.h **** 
 145:src/../h/riscv.h **** inline void Riscv::ms_sip(uint64 mask)
 146:src/../h/riscv.h **** {
 147:src/../h/riscv.h ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 148:src/../h/riscv.h **** }
 149:src/../h/riscv.h **** 
 150:src/../h/riscv.h **** inline void Riscv::mc_sip(uint64 mask)
 151:src/../h/riscv.h **** {
 152:src/../h/riscv.h ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 153:src/../h/riscv.h **** }
 154:src/../h/riscv.h **** 
 155:src/../h/riscv.h **** inline uint64 Riscv::r_sip()
 156:src/../h/riscv.h **** {
 157:src/../h/riscv.h ****     uint64 volatile sip;
 158:src/../h/riscv.h ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 159:src/../h/riscv.h ****     return sip;
 160:src/../h/riscv.h **** }
 161:src/../h/riscv.h **** 
 162:src/../h/riscv.h **** inline void Riscv::w_sip(uint64 sip)
 163:src/../h/riscv.h **** {
 164:src/../h/riscv.h ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 165:src/../h/riscv.h **** }
 166:src/../h/riscv.h **** 
 167:src/../h/riscv.h **** inline void Riscv::ms_sstatus(uint64 mask)
 168:src/../h/riscv.h **** {
 169:src/../h/riscv.h ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
  32              		.loc 2 169 5
  33              		.loc 2 169 68 is_stmt 0
  34 0010 93070010 		li	a5,256
  35              	#APP
  36              	# 169 "src/../h/riscv.h" 1
 170              	}
  37              		csrs sstatus, a5
  38              	# 0 "" 2
  39              	.LVL1:
  40              	#NO_APP
  41              	.LBE5:
  42              	.LBE4:
  14:src/riscv.cpp ****     __asm__ volatile ("sret");
  43              		.loc 1 14 5 is_stmt 1
  44              		.loc 1 14 30 is_stmt 0
  45              	#APP
GAS LISTING /tmp/ccOzO9kG.s 			page 5


  46              	# 14 "src/riscv.cpp" 1
  15              	}
  47              		sret
  48              	# 0 "" 2
  49              		.loc 1 15 1
  50              	#NO_APP
  51 001c 03348100 		ld	s0,8(sp)
  52              		.cfi_restore 8
  53              		.cfi_def_cfa 2, 16
  54 0020 13010101 		addi	sp,sp,16
  55              		.cfi_def_cfa_offset 0
  56 0024 67800000 		jr	ra
  57              		.cfi_endproc
  58              	.LFE16:
  60              	.Letext0:
  61              		.file 3 "src/../h/../lib/hw.h"
GAS LISTING /tmp/ccOzO9kG.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccOzO9kG.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccOzO9kG.s:13     .text:0000000000000000 .L0 
     /tmp/ccOzO9kG.s:14     .text:0000000000000000 .L0 
     /tmp/ccOzO9kG.s:15     .text:0000000000000004 .L0 
     /tmp/ccOzO9kG.s:17     .text:0000000000000008 .L0 
     /tmp/ccOzO9kG.s:19     .text:000000000000000c .L0 
     /tmp/ccOzO9kG.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:12     .text:000000000000000c .L0 
     /tmp/ccOzO9kG.s:32     .text:0000000000000010 .L0 
     /tmp/ccOzO9kG.s:33     .text:0000000000000010 .L0 
     /tmp/ccOzO9kG.s:34     .text:0000000000000010 .L0 
     /tmp/ccOzO9kG.s:44     .text:0000000000000018 .L0 
       src/riscv.cpp:14     .text:0000000000000018 .L0 
     /tmp/ccOzO9kG.s:51     .text:000000000000001c .L0 
     /tmp/ccOzO9kG.s:52     .text:0000000000000020 .L0 
     /tmp/ccOzO9kG.s:53     .text:0000000000000020 .L0 
     /tmp/ccOzO9kG.s:55     .text:0000000000000024 .L0 
     /tmp/ccOzO9kG.s:57     .text:0000000000000028 .L0 
     /tmp/ccOzO9kG.s:62     .text:0000000000000028 .L0 
     /tmp/ccOzO9kG.s:426    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccOzO9kG.s:861    .debug_str:00000000000001ad .LASF56
     /tmp/ccOzO9kG.s:875    .debug_str:00000000000002ba .LASF57
     /tmp/ccOzO9kG.s:895    .debug_str:0000000000000368 .LASF58
     /tmp/ccOzO9kG.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccOzO9kG.s:60     .text:0000000000000028 .Letext0
     /tmp/ccOzO9kG.s:801    .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccOzO9kG.s:871    .debug_str:00000000000002a5 .LASF0
     /tmp/ccOzO9kG.s:851    .debug_str:000000000000015c .LASF1
     /tmp/ccOzO9kG.s:841    .debug_str:0000000000000119 .LASF2
     /tmp/ccOzO9kG.s:819    .debug_str:0000000000000071 .LASF4
     /tmp/ccOzO9kG.s:847    .debug_str:0000000000000142 .LASF3
     /tmp/ccOzO9kG.s:807    .debug_str:0000000000000026 .LASF5
     /tmp/ccOzO9kG.s:805    .debug_str:0000000000000013 .LASF6
     /tmp/ccOzO9kG.s:835    .debug_str:00000000000000e4 .LASF7
     /tmp/ccOzO9kG.s:887    .debug_str:0000000000000318 .LASF8
     /tmp/ccOzO9kG.s:817    .debug_str:0000000000000063 .LASF9
     /tmp/ccOzO9kG.s:929    .debug_str:0000000000000464 .LASF10
     /tmp/ccOzO9kG.s:839    .debug_str:000000000000010a .LASF11
     /tmp/ccOzO9kG.s:923    .debug_str:000000000000043e .LASF12
     /tmp/ccOzO9kG.s:899    .debug_str:0000000000000399 .LASF13
     /tmp/ccOzO9kG.s:853    .debug_str:000000000000016f .LASF14
     /tmp/ccOzO9kG.s:829    .debug_str:00000000000000ba .LASF15
     /tmp/ccOzO9kG.s:891    .debug_str:000000000000033a .LASF16
     /tmp/ccOzO9kG.s:831    .debug_str:00000000000000d0 .LASF59
     /tmp/ccOzO9kG.s:925    .debug_str:000000000000044e .LASF60
     /tmp/ccOzO9kG.s:885    .debug_str:000000000000030c .LASF17
     /tmp/ccOzO9kG.s:857    .debug_str:0000000000000195 .LASF18
     /tmp/ccOzO9kG.s:909    .debug_str:00000000000003e5 .LASF19
     /tmp/ccOzO9kG.s:859    .debug_str:00000000000001a2 .LASF20
     /tmp/ccOzO9kG.s:913    .debug_str:00000000000003fc .LASF22
     /tmp/ccOzO9kG.s:833    .debug_str:00000000000000d6 .LASF21
     /tmp/ccOzO9kG.s:823    .debug_str:000000000000008d .LASF23
     /tmp/ccOzO9kG.s:903    .debug_str:00000000000003ae .LASF24
     /tmp/ccOzO9kG.s:855    .debug_str:000000000000017b .LASF25
     /tmp/ccOzO9kG.s:863    .debug_str:0000000000000271 .LASF26
GAS LISTING /tmp/ccOzO9kG.s 			page 7


     /tmp/ccOzO9kG.s:809    .debug_str:000000000000002d .LASF28
     /tmp/ccOzO9kG.s:865    .debug_str:000000000000027a .LASF30
     /tmp/ccOzO9kG.s:821    .debug_str:0000000000000078 .LASF32
     /tmp/ccOzO9kG.s:877    .debug_str:00000000000002c8 .LASF27
     /tmp/ccOzO9kG.s:845    .debug_str:000000000000012f .LASF29
     /tmp/ccOzO9kG.s:827    .debug_str:00000000000000b3 .LASF31
     /tmp/ccOzO9kG.s:837    .debug_str:00000000000000f7 .LASF33
     /tmp/ccOzO9kG.s:873    .debug_str:00000000000002b2 .LASF34
     /tmp/ccOzO9kG.s:907    .debug_str:00000000000003d1 .LASF35
     /tmp/ccOzO9kG.s:849    .debug_str:0000000000000154 .LASF36
     /tmp/ccOzO9kG.s:883    .debug_str:00000000000002f8 .LASF37
     /tmp/ccOzO9kG.s:915    .debug_str:0000000000000414 .LASF38
     /tmp/ccOzO9kG.s:813    .debug_str:0000000000000049 .LASF39
     /tmp/ccOzO9kG.s:843    .debug_str:0000000000000127 .LASF40
     /tmp/ccOzO9kG.s:897    .debug_str:0000000000000385 .LASF41
     /tmp/ccOzO9kG.s:927    .debug_str:000000000000045d .LASF42
     /tmp/ccOzO9kG.s:803    .debug_str:0000000000000000 .LASF43
     /tmp/ccOzO9kG.s:811    .debug_str:0000000000000042 .LASF44
     /tmp/ccOzO9kG.s:879    .debug_str:00000000000002cf .LASF45
     /tmp/ccOzO9kG.s:921    .debug_str:0000000000000438 .LASF46
     /tmp/ccOzO9kG.s:889    .debug_str:0000000000000328 .LASF47
     /tmp/ccOzO9kG.s:815    .debug_str:000000000000005d .LASF48
     /tmp/ccOzO9kG.s:919    .debug_str:0000000000000426 .LASF49
     /tmp/ccOzO9kG.s:911    .debug_str:00000000000003f1 .LASF50
     /tmp/ccOzO9kG.s:869    .debug_str:000000000000028d .LASF51
     /tmp/ccOzO9kG.s:825    .debug_str:00000000000000a8 .LASF52
     /tmp/ccOzO9kG.s:893    .debug_str:0000000000000350 .LASF53
     /tmp/ccOzO9kG.s:867    .debug_str:0000000000000283 .LASF54
     /tmp/ccOzO9kG.s:881    .debug_str:00000000000002e2 .LASF55
     /tmp/ccOzO9kG.s:917    .debug_str:000000000000041c .LASF61
     /tmp/ccOzO9kG.s:905    .debug_str:00000000000003bb .LASF62
     /tmp/ccOzO9kG.s:10     .text:0000000000000000 .LFB16
     /tmp/ccOzO9kG.s:58     .text:0000000000000028 .LFE16
     /tmp/ccOzO9kG.s:29     .text:0000000000000010 .LBB4
     /tmp/ccOzO9kG.s:42     .text:0000000000000018 .LBE4
     /tmp/ccOzO9kG.s:779    .debug_loc:0000000000000000 .LLST0
     /tmp/ccOzO9kG.s:901    .debug_str:00000000000003a9 .LASF63
     /tmp/ccOzO9kG.s:27     .text:0000000000000010 .LVL0
     /tmp/ccOzO9kG.s:39     .text:0000000000000018 .LVL1
     /tmp/ccOzO9kG.s:63     .debug_info:0000000000000000 .Ldebug_info0

NO UNDEFINED SYMBOLS
