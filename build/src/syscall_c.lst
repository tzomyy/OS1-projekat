GAS LISTING /tmp/cc1lSd5t.s 			page 1


   1              		.file	"syscall_c.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z11abi_invokeriz
   9              	_Z11abi_invokeriz:
  10              	.LFB38:
  11              		.file 1 "src/syscall_c.cpp"
   1:src/syscall_c.cpp **** //
   2:src/syscall_c.cpp **** // Created by os on 6/21/22.
   3:src/syscall_c.cpp **** //
   4:src/syscall_c.cpp **** 
   5:src/syscall_c.cpp **** 
   6:src/syscall_c.cpp **** #include "../h/syscall_c.h"
   7:src/syscall_c.cpp **** #include "../h/MemoryAllocator.h"
   8:src/syscall_c.cpp **** #include "../lib/hw.h"
   9:src/syscall_c.cpp **** #include "../h/riscv.h"
  10:src/syscall_c.cpp **** #include "../h/_thread.h"
  11:src/syscall_c.cpp **** #include "../lib/console.h"
  12:src/syscall_c.cpp **** 
  13:src/syscall_c.cpp **** void userMain(void *);
  14:src/syscall_c.cpp **** 
  15:src/syscall_c.cpp **** enum ABI_codes{
  16:src/syscall_c.cpp ****     MEM_ALLOC = 0x01,
  17:src/syscall_c.cpp ****     MEM_FREE  = 0x02,
  18:src/syscall_c.cpp ****     THREAD_CREATE = 0x11,
  19:src/syscall_c.cpp ****     THREAD_EXIT = 0x12,
  20:src/syscall_c.cpp ****     THREAD_DISPATCH = 0x13,
  21:src/syscall_c.cpp ****     THREAD_CREATE_ONLY = 0x14,
  22:src/syscall_c.cpp ****     THREAD_START = 0x15
  23:src/syscall_c.cpp **** };
  24:src/syscall_c.cpp **** 
  25:src/syscall_c.cpp **** void abi_invoker(int serviceId, ... ){
  12              		.loc 1 25 38
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FB 		addi	sp,sp,-80
  16              		.cfi_def_cfa_offset 80
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -72
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 64
  21 000c 2334B400 		sd	a1,8(s0)
  22 0010 2338C400 		sd	a2,16(s0)
  23 0014 233CD400 		sd	a3,24(s0)
  24 0018 2330E402 		sd	a4,32(s0)
  25 001c 2334F402 		sd	a5,40(s0)
  26 0020 23380403 		sd	a6,48(s0)
  27 0024 233C1403 		sd	a7,56(s0)
  26:src/syscall_c.cpp ****     __asm__ volatile("ecall");
  28              		.loc 1 26 5
  29              		.loc 1 26 30 is_stmt 0
  30              	#APP
  31              	# 26 "src/syscall_c.cpp" 1
  27              	}
GAS LISTING /tmp/cc1lSd5t.s 			page 2


  32              		ecall
  33              	# 0 "" 2
  34              		.loc 1 27 1
  35              	#NO_APP
  36 002c 03348100 		ld	s0,8(sp)
  37              		.cfi_restore 8
  38              		.cfi_def_cfa 2, 80
  39 0030 13010105 		addi	sp,sp,80
  40              		.cfi_def_cfa_offset 0
  41 0034 67800000 		jr	ra
  42              		.cfi_endproc
  43              	.LFE38:
  45              		.align	2
  46              		.globl	trapHandler
  48              	trapHandler:
  49              	.LFB39:
  28:src/syscall_c.cpp **** 
  29:src/syscall_c.cpp **** extern "C" void trap();
  30:src/syscall_c.cpp **** 
  31:src/syscall_c.cpp **** extern "C" void trapHandler(){
  50              		.loc 1 31 30 is_stmt 1
  51              		.cfi_startproc
  52 0038 130101FC 		addi	sp,sp,-64
  53              		.cfi_def_cfa_offset 64
  54 003c 233C1102 		sd	ra,56(sp)
  55 0040 23388102 		sd	s0,48(sp)
  56 0044 23349102 		sd	s1,40(sp)
  57              		.cfi_offset 1, -8
  58              		.cfi_offset 8, -16
  59              		.cfi_offset 9, -24
  60 0048 13040104 		addi	s0,sp,64
  61              		.cfi_def_cfa 8, 0
  32:src/syscall_c.cpp **** 
  33:src/syscall_c.cpp ****     uint64 scause = Riscv::r_scause();
  62              		.loc 1 33 5
  63              	.LBB23:
  64              	.LBB24:
  65              		.file 2 "src/../h/riscv.h"
   1:src/../h/riscv.h **** //
   2:src/../h/riscv.h **** // Created by os on 6/21/22.
   3:src/../h/riscv.h **** //
   4:src/../h/riscv.h **** 
   5:src/../h/riscv.h **** #ifndef OS_PROJEKAT_RISCV_H
   6:src/../h/riscv.h **** #define OS_PROJEKAT_RISCV_H
   7:src/../h/riscv.h **** 
   8:src/../h/riscv.h **** 
   9:src/../h/riscv.h **** 
  10:src/../h/riscv.h **** #include "../lib/hw.h"
  11:src/../h/riscv.h **** 
  12:src/../h/riscv.h **** class Riscv
  13:src/../h/riscv.h **** {
  14:src/../h/riscv.h **** public:
  15:src/../h/riscv.h **** 
  16:src/../h/riscv.h ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  17:src/../h/riscv.h ****     static void popSppSpie();
  18:src/../h/riscv.h **** 
  19:src/../h/riscv.h ****     // push x3..x31 registers onto stack
GAS LISTING /tmp/cc1lSd5t.s 			page 3


  20:src/../h/riscv.h ****     static void pushRegisters();
  21:src/../h/riscv.h **** 
  22:src/../h/riscv.h ****     // pop x3..x31 registers onto stack
  23:src/../h/riscv.h ****     static void popRegisters();
  24:src/../h/riscv.h **** 
  25:src/../h/riscv.h ****     // read register scause
  26:src/../h/riscv.h ****     static uint64 r_scause();
  27:src/../h/riscv.h **** 
  28:src/../h/riscv.h ****     // write register scause
  29:src/../h/riscv.h ****     static void w_scause(uint64 scause);
  30:src/../h/riscv.h **** 
  31:src/../h/riscv.h ****     // read register sepc
  32:src/../h/riscv.h ****     static uint64 r_sepc();
  33:src/../h/riscv.h **** 
  34:src/../h/riscv.h ****     // write register sepc
  35:src/../h/riscv.h ****     static void w_sepc(uint64 sepc);
  36:src/../h/riscv.h **** 
  37:src/../h/riscv.h ****     // read register stvec
  38:src/../h/riscv.h ****     static uint64 r_stvec();
  39:src/../h/riscv.h **** 
  40:src/../h/riscv.h ****     // write register stvec
  41:src/../h/riscv.h ****     static void w_stvec(uint64 stvec);
  42:src/../h/riscv.h **** 
  43:src/../h/riscv.h ****     // read register stval
  44:src/../h/riscv.h ****     static uint64 r_stval();
  45:src/../h/riscv.h **** 
  46:src/../h/riscv.h ****     // write register stval
  47:src/../h/riscv.h ****     static void w_stval(uint64 stval);
  48:src/../h/riscv.h **** 
  49:src/../h/riscv.h ****     enum BitMaskSip
  50:src/../h/riscv.h ****     {
  51:src/../h/riscv.h ****         SIP_SSIP = (1 << 1),
  52:src/../h/riscv.h ****         SIP_STIP = (1 << 5),
  53:src/../h/riscv.h ****         SIP_SEIP = (1 << 9),
  54:src/../h/riscv.h ****     };
  55:src/../h/riscv.h **** 
  56:src/../h/riscv.h ****     // mask set register sip
  57:src/../h/riscv.h ****     static void ms_sip(uint64 mask);
  58:src/../h/riscv.h **** 
  59:src/../h/riscv.h ****     // mask clear register sip
  60:src/../h/riscv.h ****     static void mc_sip(uint64 mask);
  61:src/../h/riscv.h **** 
  62:src/../h/riscv.h ****     // read register sip
  63:src/../h/riscv.h ****     static uint64 r_sip();
  64:src/../h/riscv.h **** 
  65:src/../h/riscv.h ****     // write register sip
  66:src/../h/riscv.h ****     static void w_sip(uint64 sip);
  67:src/../h/riscv.h **** 
  68:src/../h/riscv.h ****     enum BitMaskSstatus
  69:src/../h/riscv.h ****     {
  70:src/../h/riscv.h ****         SSTATUS_SIE = (1 << 1),
  71:src/../h/riscv.h ****         SSTATUS_SPIE = (1 << 5),
  72:src/../h/riscv.h ****         SSTATUS_SPP = (1 << 8),
  73:src/../h/riscv.h ****     };
  74:src/../h/riscv.h **** 
  75:src/../h/riscv.h ****     // mask set register sstatus
  76:src/../h/riscv.h ****     static void ms_sstatus(uint64 mask);
GAS LISTING /tmp/cc1lSd5t.s 			page 4


  77:src/../h/riscv.h **** 
  78:src/../h/riscv.h ****     // mask clear register sstatus
  79:src/../h/riscv.h ****     static void mc_sstatus(uint64 mask);
  80:src/../h/riscv.h **** 
  81:src/../h/riscv.h ****     // read register sstatus
  82:src/../h/riscv.h ****     static uint64 r_sstatus();
  83:src/../h/riscv.h **** 
  84:src/../h/riscv.h ****     // write register sstatus
  85:src/../h/riscv.h ****     static void w_sstatus(uint64 sstatus);
  86:src/../h/riscv.h **** 
  87:src/../h/riscv.h ****     // supervisor trap
  88:src/../h/riscv.h ****     //static void supervisorTrap();
  89:src/../h/riscv.h **** 
  90:src/../h/riscv.h **** private:
  91:src/../h/riscv.h **** 
  92:src/../h/riscv.h ****     // supervisor trap handler
  93:src/../h/riscv.h ****     //static void handleSupervisorTrap();
  94:src/../h/riscv.h **** 
  95:src/../h/riscv.h **** };
  96:src/../h/riscv.h **** 
  97:src/../h/riscv.h **** inline uint64 Riscv::r_scause()
  98:src/../h/riscv.h **** {
  99:src/../h/riscv.h ****     uint64 scause;
  66              		.loc 2 99 5
 100:src/../h/riscv.h ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  67              		.loc 2 100 5
  68              		.loc 2 100 72 is_stmt 0
  69              	#APP
  70              	# 100 "src/../h/riscv.h" 1
 101              	    return scause;
  71              		csrr a4, scause
  72              	# 0 "" 2
  73              	.LVL1:
  74              		.loc 2 101 5 is_stmt 1
  75              	#NO_APP
  76              	.LBE24:
  77              	.LBE23:
  34:src/syscall_c.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL) {
  78              		.loc 1 34 5
  79              	.LBB25:
  80              		.loc 1 34 40 is_stmt 0
  81 0050 930687FF 		addi	a3,a4,-8
  82              		.loc 1 34 5
  83 0054 93071000 		li	a5,1
  84 0058 63F8D702 		bleu	a3,a5,.L22
  35:src/syscall_c.cpp ****         uint64 volatile sepc = 0;
  36:src/syscall_c.cpp ****         __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  37:src/syscall_c.cpp ****         sepc +=4;
  38:src/syscall_c.cpp **** 
  39:src/syscall_c.cpp ****         uint64 volatile status = Riscv::r_sstatus();
  40:src/syscall_c.cpp **** 
  41:src/syscall_c.cpp ****         size_t opCode;
  42:src/syscall_c.cpp ****         __asm__ volatile("mv %0, a0": "=r" (opCode));
  43:src/syscall_c.cpp **** 
  44:src/syscall_c.cpp ****         switch (opCode) {
  45:src/syscall_c.cpp ****             case MEM_ALLOC:
  46:src/syscall_c.cpp ****             {
GAS LISTING /tmp/cc1lSd5t.s 			page 5


  47:src/syscall_c.cpp ****                 size_t size;
  48:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, a1": "=r"(size));
  49:src/syscall_c.cpp **** 
  50:src/syscall_c.cpp ****                 void* ret = MemoryAllocator::getInstance()->mem_alloc(size);
  51:src/syscall_c.cpp ****                 __asm__ volatile("sd a0, 10*8(fp)");
  52:src/syscall_c.cpp **** 
  53:src/syscall_c.cpp ****                 __asm__ volatile("mv a0, %0" : : "r"(ret));
  54:src/syscall_c.cpp ****                 break;}
  55:src/syscall_c.cpp ****             case MEM_FREE:
  56:src/syscall_c.cpp ****             {
  57:src/syscall_c.cpp ****                 void *p;
  58:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, a1": "=r"(p));
  59:src/syscall_c.cpp ****                 MemoryAllocator::mem_free(p);
  60:src/syscall_c.cpp ****                 break;}
  61:src/syscall_c.cpp ****             case THREAD_CREATE:
  62:src/syscall_c.cpp ****             {
  63:src/syscall_c.cpp ****                 __asm__ volatile("ld s1, 11*8(fp)");
  64:src/syscall_c.cpp ****                 __asm__ volatile("ld s2, 12*8(fp)");
  65:src/syscall_c.cpp ****                 __asm__ volatile("ld s3, 13*8(fp)");
  66:src/syscall_c.cpp ****                 thread_t* handle = nullptr;
  67:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, s1": "=r"(handle));
  68:src/syscall_c.cpp ****                 _thread::Body body;
  69:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, s2": "=r"(body));
  70:src/syscall_c.cpp ****                 void* arg;
  71:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, s3": "=r"(arg));
  72:src/syscall_c.cpp **** 
  73:src/syscall_c.cpp ****                 *handle = _thread::createThread(body,arg);
  74:src/syscall_c.cpp ****                 (*handle)->start();
  75:src/syscall_c.cpp **** 
  76:src/syscall_c.cpp ****                 int ret = 0;
  77:src/syscall_c.cpp ****                 if (!handle) {ret = -1;}
  78:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, a0" : :"r"(ret));
  79:src/syscall_c.cpp ****                 break;
  80:src/syscall_c.cpp ****             }
  81:src/syscall_c.cpp ****             case THREAD_EXIT:
  82:src/syscall_c.cpp ****             {
  83:src/syscall_c.cpp ****                 _thread::threadExit();
  84:src/syscall_c.cpp ****                 break;}
  85:src/syscall_c.cpp ****             case THREAD_DISPATCH:
  86:src/syscall_c.cpp ****             {
  87:src/syscall_c.cpp ****                 _thread::dispatch();
  88:src/syscall_c.cpp ****                 break;
  89:src/syscall_c.cpp ****             }
  90:src/syscall_c.cpp ****             case THREAD_CREATE_ONLY:{
  91:src/syscall_c.cpp ****                 __asm__ volatile("ld s1, 11*8(fp)");
  92:src/syscall_c.cpp ****                 __asm__ volatile("ld s2, 12*8(fp)");
  93:src/syscall_c.cpp ****                 __asm__ volatile("ld s3, 13*8(fp)");
  94:src/syscall_c.cpp ****                 thread_t* handle = nullptr;
  95:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, s1": "=r"(handle));
  96:src/syscall_c.cpp ****                 _thread::Body body;
  97:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, s2": "=r"(body));
  98:src/syscall_c.cpp ****                 void* arg;
  99:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, s3": "=r"(arg));
 100:src/syscall_c.cpp **** 
 101:src/syscall_c.cpp ****                 *handle = _thread::createThread(body,arg);
 102:src/syscall_c.cpp **** 
 103:src/syscall_c.cpp ****                 int ret = 0;
GAS LISTING /tmp/cc1lSd5t.s 			page 6


 104:src/syscall_c.cpp ****                 if (!handle) {ret = -1;}
 105:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, a0" : :"r"(ret));
 106:src/syscall_c.cpp ****                 break;}
 107:src/syscall_c.cpp ****             case THREAD_START:{
 108:src/syscall_c.cpp ****                 thread_t handle = nullptr;
 109:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, a1": "=r"(handle));
 110:src/syscall_c.cpp **** 
 111:src/syscall_c.cpp ****                 handle->start();
 112:src/syscall_c.cpp ****                 break;}
 113:src/syscall_c.cpp ****             default:
 114:src/syscall_c.cpp ****                 __asm__ volatile("csrw sepc, %0" : : "r"(&userMain));
 115:src/syscall_c.cpp ****                 Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 116:src/syscall_c.cpp ****                 return;
 117:src/syscall_c.cpp ****                 //__asm__ volatile("sret");
 118:src/syscall_c.cpp ****         }
 119:src/syscall_c.cpp ****         Riscv::w_sepc(sepc);
 120:src/syscall_c.cpp ****         Riscv::w_sstatus(status);
 121:src/syscall_c.cpp ****     } /*else if(scause == 0x0000000000000009UL){
 122:src/syscall_c.cpp ****         __asm__ volatile("csrw sepc, %0" : : "r"(&userMain));
 123:src/syscall_c.cpp ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 124:src/syscall_c.cpp ****         //__asm__ volatile("sret");
 125:src/syscall_c.cpp ****     }*/
 126:src/syscall_c.cpp ****     else if (scause == 0x8000000000000001UL)
  85              		.loc 1 126 10 is_stmt 1
  86 005c 9307F0FF 		li	a5,-1
  87 0060 9397F703 		slli	a5,a5,63
  88 0064 93871700 		addi	a5,a5,1
  89 0068 6302F718 		beq	a4,a5,.L23
 127:src/syscall_c.cpp ****     {
 128:src/syscall_c.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 129:src/syscall_c.cpp ****     } else if (scause == 0x8000000000000009UL)
  90              		.loc 1 129 12
  91 006c 9307F0FF 		li	a5,-1
  92 0070 9397F703 		slli	a5,a5,63
  93 0074 93879700 		addi	a5,a5,9
  94 0078 6318F708 		bne	a4,a5,.L3
 130:src/syscall_c.cpp ****     {
 131:src/syscall_c.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 132:src/syscall_c.cpp ****         console_handler();
  95              		.loc 1 132 9
  96              		.loc 1 132 24 is_stmt 0
  97 007c 97000000 		call	console_handler@plt
  97      E7800000 
  98              	.LVL2:
  99 0084 6F004008 		j	.L3
 100              	.LVL3:
 101              	.L22:
 102              	.LBB26:
  35:src/syscall_c.cpp ****         __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 103              		.loc 1 35 9 is_stmt 1
  35:src/syscall_c.cpp ****         __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 104              		.loc 1 35 25 is_stmt 0
 105 0088 233404FC 		sd	zero,-56(s0)
  36:src/syscall_c.cpp ****         sepc +=4;
 106              		.loc 1 36 9 is_stmt 1
  36:src/syscall_c.cpp ****         sepc +=4;
 107              		.loc 1 36 68 is_stmt 0
GAS LISTING /tmp/cc1lSd5t.s 			page 7


 108              	#APP
 109              	# 36 "src/syscall_c.cpp" 1
 110              		csrr a5, sepc
 111              	# 0 "" 2
 112              	#NO_APP
 113 0090 2334F4FC 		sd	a5,-56(s0)
  37:src/syscall_c.cpp **** 
 114              		.loc 1 37 9 is_stmt 1
  37:src/syscall_c.cpp **** 
 115              		.loc 1 37 14 is_stmt 0
 116 0094 833784FC 		ld	a5,-56(s0)
 117 0098 93874700 		addi	a5,a5,4
 118 009c 2334F4FC 		sd	a5,-56(s0)
  39:src/syscall_c.cpp **** 
 119              		.loc 1 39 9 is_stmt 1
 120              	.LBB27:
 121              	.LBB28:
 102:src/../h/riscv.h **** }
 103:src/../h/riscv.h **** 
 104:src/../h/riscv.h **** inline void Riscv::w_scause(uint64 scause)
 105:src/../h/riscv.h **** {
 106:src/../h/riscv.h ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 107:src/../h/riscv.h **** }
 108:src/../h/riscv.h **** 
 109:src/../h/riscv.h **** inline uint64 Riscv::r_sepc()
 110:src/../h/riscv.h **** {
 111:src/../h/riscv.h ****     uint64 volatile sepc;
 112:src/../h/riscv.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 113:src/../h/riscv.h ****     return sepc;
 114:src/../h/riscv.h **** }
 115:src/../h/riscv.h **** 
 116:src/../h/riscv.h **** inline void Riscv::w_sepc(uint64 sepc)
 117:src/../h/riscv.h **** {
 118:src/../h/riscv.h ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 119:src/../h/riscv.h **** }
 120:src/../h/riscv.h **** 
 121:src/../h/riscv.h **** inline uint64 Riscv::r_stvec()
 122:src/../h/riscv.h **** {
 123:src/../h/riscv.h ****     uint64 volatile stvec;
 124:src/../h/riscv.h ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 125:src/../h/riscv.h ****     return stvec;
 126:src/../h/riscv.h **** }
 127:src/../h/riscv.h **** 
 128:src/../h/riscv.h **** inline void Riscv::w_stvec(uint64 stvec)
 129:src/../h/riscv.h **** {
 130:src/../h/riscv.h ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 131:src/../h/riscv.h **** }
 132:src/../h/riscv.h **** 
 133:src/../h/riscv.h **** inline uint64 Riscv::r_stval()
 134:src/../h/riscv.h **** {
 135:src/../h/riscv.h ****     uint64 volatile stval;
 136:src/../h/riscv.h ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 137:src/../h/riscv.h ****     return stval;
 138:src/../h/riscv.h **** }
 139:src/../h/riscv.h **** 
 140:src/../h/riscv.h **** inline void Riscv::w_stval(uint64 stval)
 141:src/../h/riscv.h **** {
GAS LISTING /tmp/cc1lSd5t.s 			page 8


 142:src/../h/riscv.h ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 143:src/../h/riscv.h **** }
 144:src/../h/riscv.h **** 
 145:src/../h/riscv.h **** inline void Riscv::ms_sip(uint64 mask)
 146:src/../h/riscv.h **** {
 147:src/../h/riscv.h ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 148:src/../h/riscv.h **** }
 149:src/../h/riscv.h **** 
 150:src/../h/riscv.h **** inline void Riscv::mc_sip(uint64 mask)
 151:src/../h/riscv.h **** {
 152:src/../h/riscv.h ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 153:src/../h/riscv.h **** }
 154:src/../h/riscv.h **** 
 155:src/../h/riscv.h **** inline uint64 Riscv::r_sip()
 156:src/../h/riscv.h **** {
 157:src/../h/riscv.h ****     uint64 volatile sip;
 158:src/../h/riscv.h ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 159:src/../h/riscv.h ****     return sip;
 160:src/../h/riscv.h **** }
 161:src/../h/riscv.h **** 
 162:src/../h/riscv.h **** inline void Riscv::w_sip(uint64 sip)
 163:src/../h/riscv.h **** {
 164:src/../h/riscv.h ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 165:src/../h/riscv.h **** }
 166:src/../h/riscv.h **** 
 167:src/../h/riscv.h **** inline void Riscv::ms_sstatus(uint64 mask)
 168:src/../h/riscv.h **** {
 169:src/../h/riscv.h ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 170:src/../h/riscv.h **** }
 171:src/../h/riscv.h **** 
 172:src/../h/riscv.h **** inline void Riscv::mc_sstatus(uint64 mask)
 173:src/../h/riscv.h **** {
 174:src/../h/riscv.h ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 175:src/../h/riscv.h **** }
 176:src/../h/riscv.h **** 
 177:src/../h/riscv.h **** inline uint64 Riscv::r_sstatus()
 178:src/../h/riscv.h **** {
 179:src/../h/riscv.h ****     uint64 volatile sstatus;
 122              		.loc 2 179 5
 180:src/../h/riscv.h ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 123              		.loc 2 180 5
 124              		.loc 2 180 76 is_stmt 0
 125              	#APP
 126              	# 180 "src/../h/riscv.h" 1
 181              	    return sstatus;
 127              		csrr a5, sstatus
 128              	# 0 "" 2
 129              	#NO_APP
 130 00a4 233CF4FC 		sd	a5,-40(s0)
 131              		.loc 2 181 5 is_stmt 1
 132              		.loc 2 181 12 is_stmt 0
 133 00a8 833784FD 		ld	a5,-40(s0)
 134              	.LBE28:
 135              	.LBE27:
  39:src/syscall_c.cpp **** 
 136              		.loc 1 39 51
 137 00ac 2338F4FC 		sd	a5,-48(s0)
GAS LISTING /tmp/cc1lSd5t.s 			page 9


  41:src/syscall_c.cpp ****         __asm__ volatile("mv %0, a0": "=r" (opCode));
 138              		.loc 1 41 9 is_stmt 1
  42:src/syscall_c.cpp **** 
 139              		.loc 1 42 9
  42:src/syscall_c.cpp **** 
 140              		.loc 1 42 53 is_stmt 0
 141              	#APP
 142              	# 42 "src/syscall_c.cpp" 1
 143              		mv a5, a0
 144              	# 0 "" 2
 145              	.LVL4:
  44:src/syscall_c.cpp ****             case MEM_ALLOC:
 146              		.loc 1 44 9 is_stmt 1
 147              	#NO_APP
 148 00b4 13075001 		li	a4,21
 149              	.LVL5:
 150 00b8 636EF710 		bgtu	a5,a4,.L5
 151 00bc 93972700 		slli	a5,a5,2
 152              	.LVL6:
 153 00c0 17070000 		lla	a4,.L7
 153      13070700 
 154 00c8 B387E700 		add	a5,a5,a4
 155 00cc 83A70700 		lw	a5,0(a5)
 156 00d0 B387E700 		add	a5,a5,a4
 157 00d4 67800700 		jr	a5
 158              		.section	.rodata
 159              		.align	2
 160              		.align	2
 161              	.L7:
 162 0000 00000000 		.word	.L5-.L7
 163 0004 00000000 		.word	.L13-.L7
 164 0008 00000000 		.word	.L12-.L7
 165 000c 00000000 		.word	.L5-.L7
 166 0010 00000000 		.word	.L5-.L7
 167 0014 00000000 		.word	.L5-.L7
 168 0018 00000000 		.word	.L5-.L7
 169 001c 00000000 		.word	.L5-.L7
 170 0020 00000000 		.word	.L5-.L7
 171 0024 00000000 		.word	.L5-.L7
 172 0028 00000000 		.word	.L5-.L7
 173 002c 00000000 		.word	.L5-.L7
 174 0030 00000000 		.word	.L5-.L7
 175 0034 00000000 		.word	.L5-.L7
 176 0038 00000000 		.word	.L5-.L7
 177 003c 00000000 		.word	.L5-.L7
 178 0040 00000000 		.word	.L5-.L7
 179 0044 00000000 		.word	.L11-.L7
 180 0048 00000000 		.word	.L10-.L7
 181 004c 00000000 		.word	.L9-.L7
 182 0050 00000000 		.word	.L8-.L7
 183 0054 00000000 		.word	.L6-.L7
 184              		.text
 185              	.L13:
 186              	.LBB29:
  45:src/syscall_c.cpp ****             {
 187              		.loc 1 45 13
  46:src/syscall_c.cpp ****                 size_t size;
GAS LISTING /tmp/cc1lSd5t.s 			page 10


 188              		.loc 1 46 13
 189              	.LBB30:
  47:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, a1": "=r"(size));
 190              		.loc 1 47 17
  48:src/syscall_c.cpp **** 
 191              		.loc 1 48 17
  48:src/syscall_c.cpp **** 
 192              		.loc 1 48 58 is_stmt 0
 193              	#APP
 194              	# 48 "src/syscall_c.cpp" 1
 195              		mv s1, a1
 196              	# 0 "" 2
 197              	.LVL7:
  50:src/syscall_c.cpp ****                 __asm__ volatile("sd a0, 10*8(fp)");
 198              		.loc 1 50 17 is_stmt 1
  50:src/syscall_c.cpp ****                 __asm__ volatile("sd a0, 10*8(fp)");
 199              		.loc 1 50 57 is_stmt 0
 200              	#NO_APP
 201 00dc 97000000 		call	_ZN15MemoryAllocator11getInstanceEv@plt
 201      E7800000 
 202              	.LVL8:
  50:src/syscall_c.cpp ****                 __asm__ volatile("sd a0, 10*8(fp)");
 203              		.loc 1 50 75
 204 00e4 13850400 		mv	a0,s1
 205 00e8 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 205      E7800000 
 206              	.LVL9:
  51:src/syscall_c.cpp **** 
 207              		.loc 1 51 17 is_stmt 1
  51:src/syscall_c.cpp **** 
 208              		.loc 1 51 52 is_stmt 0
 209              	#APP
 210              	# 51 "src/syscall_c.cpp" 1
  53:src/syscall_c.cpp ****                 break;}
 211              		sd a0, 10*8(fp)
 212              	# 0 "" 2
 213              		.loc 1 53 17 is_stmt 1
  53:src/syscall_c.cpp ****                 break;}
 214              		.loc 1 53 59 is_stmt 0
 215              	# 53 "src/syscall_c.cpp" 1
  54:src/syscall_c.cpp ****             case MEM_FREE:
 216              		mv a0, a0
 217              	# 0 "" 2
 218              		.loc 1 54 17 is_stmt 1
 219              	.LVL10:
 220              	#NO_APP
 221              	.L14:
 222              	.LBE30:
 223              	.LBE29:
 119:src/syscall_c.cpp ****         Riscv::w_sstatus(status);
 224              		.loc 1 119 9
 119:src/syscall_c.cpp ****         Riscv::w_sstatus(status);
 225              		.loc 1 119 22 is_stmt 0
 226 00f8 833784FC 		ld	a5,-56(s0)
 227              	.LVL11:
 228              	.LBB37:
 229              	.LBB38:
GAS LISTING /tmp/cc1lSd5t.s 			page 11


 118:src/../h/riscv.h **** }
 230              		.loc 2 118 5 is_stmt 1
 118:src/../h/riscv.h **** }
 231              		.loc 2 118 65 is_stmt 0
 232              	#APP
 233              	# 118 "src/../h/riscv.h" 1
 234              		csrw sepc, a5
 235              	# 0 "" 2
 236              	.LVL12:
 237              	#NO_APP
 238              	.LBE38:
 239              	.LBE37:
 120:src/syscall_c.cpp ****     } /*else if(scause == 0x0000000000000009UL){
 240              		.loc 1 120 9 is_stmt 1
 120:src/syscall_c.cpp ****     } /*else if(scause == 0x0000000000000009UL){
 241              		.loc 1 120 25 is_stmt 0
 242 0100 833704FD 		ld	a5,-48(s0)
 243              	.LVL13:
 244              	.LBB39:
 245              	.LBB40:
 182:src/../h/riscv.h **** }
 183:src/../h/riscv.h **** 
 184:src/../h/riscv.h **** inline void Riscv::w_sstatus(uint64 sstatus)
 185:src/../h/riscv.h **** {
 186:src/../h/riscv.h ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 246              		.loc 2 186 5 is_stmt 1
 247              		.loc 2 186 77 is_stmt 0
 248              	#APP
 249              	# 186 "src/../h/riscv.h" 1
 187              	}
 250              		csrw sstatus, a5
 251              	# 0 "" 2
 252              	.LVL14:
 253              	#NO_APP
 254              	.L3:
 255              	.LBE40:
 256              	.LBE39:
 257              	.LBE26:
 258              	.LBE25:
 133:src/syscall_c.cpp ****     } else
 134:src/syscall_c.cpp ****     {
 135:src/syscall_c.cpp ****         // unexpected trap cause
 136:src/syscall_c.cpp ****     }
 137:src/syscall_c.cpp **** }
 259              		.loc 1 137 1
 260 0108 83308103 		ld	ra,56(sp)
 261              		.cfi_remember_state
 262              		.cfi_restore 1
 263 010c 03340103 		ld	s0,48(sp)
 264              		.cfi_restore 8
 265              		.cfi_def_cfa 2, 64
 266 0110 83348102 		ld	s1,40(sp)
 267              		.cfi_restore 9
 268 0114 13010104 		addi	sp,sp,64
 269              		.cfi_def_cfa_offset 0
 270 0118 67800000 		jr	ra
 271              	.LVL15:
GAS LISTING /tmp/cc1lSd5t.s 			page 12


 272              	.L12:
 273              		.cfi_restore_state
 274              	.LBB45:
 275              	.LBB42:
 276              	.LBB41:
  55:src/syscall_c.cpp ****             {
 277              		.loc 1 55 13 is_stmt 1
  56:src/syscall_c.cpp ****                 void *p;
 278              		.loc 1 56 13
 279              	.LBB31:
  57:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, a1": "=r"(p));
 280              		.loc 1 57 17
  58:src/syscall_c.cpp ****                 MemoryAllocator::mem_free(p);
 281              		.loc 1 58 17
  58:src/syscall_c.cpp ****                 MemoryAllocator::mem_free(p);
 282              		.loc 1 58 55 is_stmt 0
 283              	#APP
 284              	# 58 "src/syscall_c.cpp" 1
 285              		mv a0, a1
 286              	# 0 "" 2
 287              	.LVL16:
  59:src/syscall_c.cpp ****                 break;}
 288              		.loc 1 59 17 is_stmt 1
  59:src/syscall_c.cpp ****                 break;}
 289              		.loc 1 59 42 is_stmt 0
 290              	#NO_APP
 291 0120 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 291      E7800000 
 292              	.LVL17:
  60:src/syscall_c.cpp ****             case THREAD_CREATE:
 293              		.loc 1 60 17 is_stmt 1
 294 0128 6FF01FFD 		j	.L14
 295              	.LVL18:
 296              	.L11:
 297              	.LBE31:
  61:src/syscall_c.cpp ****             {
 298              		.loc 1 61 13
  62:src/syscall_c.cpp ****                 __asm__ volatile("ld s1, 11*8(fp)");
 299              		.loc 1 62 13
 300              	.LBB32:
  63:src/syscall_c.cpp ****                 __asm__ volatile("ld s2, 12*8(fp)");
 301              		.loc 1 63 17
  63:src/syscall_c.cpp ****                 __asm__ volatile("ld s2, 12*8(fp)");
 302              		.loc 1 63 52 is_stmt 0
 303              	#APP
 304              	# 63 "src/syscall_c.cpp" 1
  64:src/syscall_c.cpp ****                 __asm__ volatile("ld s3, 13*8(fp)");
 305              		ld s1, 11*8(fp)
 306              	# 0 "" 2
 307              		.loc 1 64 17 is_stmt 1
  64:src/syscall_c.cpp ****                 __asm__ volatile("ld s3, 13*8(fp)");
 308              		.loc 1 64 52 is_stmt 0
 309              	# 64 "src/syscall_c.cpp" 1
  65:src/syscall_c.cpp ****                 thread_t* handle = nullptr;
 310              		ld s2, 12*8(fp)
 311              	# 0 "" 2
 312              		.loc 1 65 17 is_stmt 1
GAS LISTING /tmp/cc1lSd5t.s 			page 13


  65:src/syscall_c.cpp ****                 thread_t* handle = nullptr;
 313              		.loc 1 65 52 is_stmt 0
 314              	# 65 "src/syscall_c.cpp" 1
  66:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, s1": "=r"(handle));
 315              		ld s3, 13*8(fp)
 316              	# 0 "" 2
 317              		.loc 1 66 17 is_stmt 1
 318              	.LVL19:
  67:src/syscall_c.cpp ****                 _thread::Body body;
 319              		.loc 1 67 17
  67:src/syscall_c.cpp ****                 _thread::Body body;
 320              		.loc 1 67 60 is_stmt 0
 321              	# 67 "src/syscall_c.cpp" 1
 322              		mv s1, s1
 323              	# 0 "" 2
 324              	.LVL20:
  68:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, s2": "=r"(body));
 325              		.loc 1 68 17 is_stmt 1
  69:src/syscall_c.cpp ****                 void* arg;
 326              		.loc 1 69 17
  69:src/syscall_c.cpp ****                 void* arg;
 327              		.loc 1 69 58 is_stmt 0
 328              	# 69 "src/syscall_c.cpp" 1
 329              		mv a0, s2
 330              	# 0 "" 2
 331              	.LVL21:
  70:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, s3": "=r"(arg));
 332              		.loc 1 70 17 is_stmt 1
  71:src/syscall_c.cpp **** 
 333              		.loc 1 71 17
  71:src/syscall_c.cpp **** 
 334              		.loc 1 71 57 is_stmt 0
 335              	# 71 "src/syscall_c.cpp" 1
 336              		mv a1, s3
 337              	# 0 "" 2
 338              	.LVL22:
  73:src/syscall_c.cpp ****                 (*handle)->start();
 339              		.loc 1 73 17 is_stmt 1
  73:src/syscall_c.cpp ****                 (*handle)->start();
 340              		.loc 1 73 48 is_stmt 0
 341              	#NO_APP
 342 0144 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_@plt
 342      E7800000 
 343              	.LVL23:
  73:src/syscall_c.cpp ****                 (*handle)->start();
 344              		.loc 1 73 25
 345 014c 23B0A400 		sd	a0,0(s1)
  74:src/syscall_c.cpp **** 
 346              		.loc 1 74 17 is_stmt 1
  74:src/syscall_c.cpp **** 
 347              		.loc 1 74 33 is_stmt 0
 348 0150 97000000 		call	_ZN7_thread5startEv@plt
 348      E7800000 
 349              	.LVL24:
  76:src/syscall_c.cpp ****                 if (!handle) {ret = -1;}
 350              		.loc 1 76 17 is_stmt 1
  77:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, a0" : :"r"(ret));
GAS LISTING /tmp/cc1lSd5t.s 			page 14


 351              		.loc 1 77 17
 352 0158 63880400 		beqz	s1,.L19
  76:src/syscall_c.cpp ****                 if (!handle) {ret = -1;}
 353              		.loc 1 76 21 is_stmt 0
 354 015c 93070000 		li	a5,0
 355              	.L15:
 356              	.LVL25:
  78:src/syscall_c.cpp ****                 break;
 357              		.loc 1 78 17 is_stmt 1
  78:src/syscall_c.cpp ****                 break;
 358              		.loc 1 78 58 is_stmt 0
 359              	#APP
 360              	# 78 "src/syscall_c.cpp" 1
  79:src/syscall_c.cpp ****             }
 361              		mv a5, a0
 362              	# 0 "" 2
 363              		.loc 1 79 17 is_stmt 1
 364              	#NO_APP
 365 0164 6FF05FF9 		j	.L14
 366              	.LVL26:
 367              	.L19:
  77:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, a0" : :"r"(ret));
 368              		.loc 1 77 35 is_stmt 0
 369 0168 9307F0FF 		li	a5,-1
 370 016c 6FF05FFF 		j	.L15
 371              	.LVL27:
 372              	.L10:
 373              	.LBE32:
  81:src/syscall_c.cpp ****             {
 374              		.loc 1 81 13 is_stmt 1
  82:src/syscall_c.cpp ****                 _thread::threadExit();
 375              		.loc 1 82 13
  83:src/syscall_c.cpp ****                 break;}
 376              		.loc 1 83 17
  83:src/syscall_c.cpp ****                 break;}
 377              		.loc 1 83 36 is_stmt 0
 378 0170 97000000 		call	_ZN7_thread10threadExitEv@plt
 378      E7800000 
 379              	.LVL28:
  84:src/syscall_c.cpp ****             case THREAD_DISPATCH:
 380              		.loc 1 84 17 is_stmt 1
 381 0178 6FF01FF8 		j	.L14
 382              	.LVL29:
 383              	.L9:
  85:src/syscall_c.cpp ****             {
 384              		.loc 1 85 13
  86:src/syscall_c.cpp ****                 _thread::dispatch();
 385              		.loc 1 86 13
  87:src/syscall_c.cpp ****                 break;
 386              		.loc 1 87 17
  87:src/syscall_c.cpp ****                 break;
 387              		.loc 1 87 34 is_stmt 0
 388 017c 97000000 		call	_ZN7_thread8dispatchEv@plt
 388      E7800000 
 389              	.LVL30:
  88:src/syscall_c.cpp ****             }
 390              		.loc 1 88 17 is_stmt 1
GAS LISTING /tmp/cc1lSd5t.s 			page 15


 391 0184 6FF05FF7 		j	.L14
 392              	.LVL31:
 393              	.L8:
  90:src/syscall_c.cpp ****                 __asm__ volatile("ld s1, 11*8(fp)");
 394              		.loc 1 90 13
  90:src/syscall_c.cpp ****                 __asm__ volatile("ld s1, 11*8(fp)");
 395              		.loc 1 90 37
 396              	.LBB33:
  91:src/syscall_c.cpp ****                 __asm__ volatile("ld s2, 12*8(fp)");
 397              		.loc 1 91 17
  91:src/syscall_c.cpp ****                 __asm__ volatile("ld s2, 12*8(fp)");
 398              		.loc 1 91 52 is_stmt 0
 399              	#APP
 400              	# 91 "src/syscall_c.cpp" 1
  92:src/syscall_c.cpp ****                 __asm__ volatile("ld s3, 13*8(fp)");
 401              		ld s1, 11*8(fp)
 402              	# 0 "" 2
 403              		.loc 1 92 17 is_stmt 1
  92:src/syscall_c.cpp ****                 __asm__ volatile("ld s3, 13*8(fp)");
 404              		.loc 1 92 52 is_stmt 0
 405              	# 92 "src/syscall_c.cpp" 1
  93:src/syscall_c.cpp ****                 thread_t* handle = nullptr;
 406              		ld s2, 12*8(fp)
 407              	# 0 "" 2
 408              		.loc 1 93 17 is_stmt 1
  93:src/syscall_c.cpp ****                 thread_t* handle = nullptr;
 409              		.loc 1 93 52 is_stmt 0
 410              	# 93 "src/syscall_c.cpp" 1
  94:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, s1": "=r"(handle));
 411              		ld s3, 13*8(fp)
 412              	# 0 "" 2
 413              		.loc 1 94 17 is_stmt 1
 414              	.LVL32:
  95:src/syscall_c.cpp ****                 _thread::Body body;
 415              		.loc 1 95 17
  95:src/syscall_c.cpp ****                 _thread::Body body;
 416              		.loc 1 95 60 is_stmt 0
 417              	# 95 "src/syscall_c.cpp" 1
 418              		mv s1, s1
 419              	# 0 "" 2
 420              	.LVL33:
  96:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, s2": "=r"(body));
 421              		.loc 1 96 17 is_stmt 1
  97:src/syscall_c.cpp ****                 void* arg;
 422              		.loc 1 97 17
  97:src/syscall_c.cpp ****                 void* arg;
 423              		.loc 1 97 58 is_stmt 0
 424              	# 97 "src/syscall_c.cpp" 1
 425              		mv a0, s2
 426              	# 0 "" 2
 427              	.LVL34:
  98:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, s3": "=r"(arg));
 428              		.loc 1 98 17 is_stmt 1
  99:src/syscall_c.cpp **** 
 429              		.loc 1 99 17
  99:src/syscall_c.cpp **** 
 430              		.loc 1 99 57 is_stmt 0
GAS LISTING /tmp/cc1lSd5t.s 			page 16


 431              	# 99 "src/syscall_c.cpp" 1
 432              		mv a1, s3
 433              	# 0 "" 2
 434              	.LVL35:
 101:src/syscall_c.cpp **** 
 435              		.loc 1 101 17 is_stmt 1
 101:src/syscall_c.cpp **** 
 436              		.loc 1 101 48 is_stmt 0
 437              	#NO_APP
 438 01a0 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_@plt
 438      E7800000 
 439              	.LVL36:
 101:src/syscall_c.cpp **** 
 440              		.loc 1 101 25
 441 01a8 23B0A400 		sd	a0,0(s1)
 103:src/syscall_c.cpp ****                 if (!handle) {ret = -1;}
 442              		.loc 1 103 17 is_stmt 1
 443              	.LVL37:
 104:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, a0" : :"r"(ret));
 444              		.loc 1 104 17
 445 01ac 63880400 		beqz	s1,.L20
 103:src/syscall_c.cpp ****                 if (!handle) {ret = -1;}
 446              		.loc 1 103 21 is_stmt 0
 447 01b0 93070000 		li	a5,0
 448              	.L16:
 449              	.LVL38:
 105:src/syscall_c.cpp ****                 break;}
 450              		.loc 1 105 17 is_stmt 1
 105:src/syscall_c.cpp ****                 break;}
 451              		.loc 1 105 58 is_stmt 0
 452              	#APP
 453              	# 105 "src/syscall_c.cpp" 1
 106:src/syscall_c.cpp ****             case THREAD_START:{
 454              		mv a5, a0
 455              	# 0 "" 2
 456              		.loc 1 106 17 is_stmt 1
 457              	#NO_APP
 458 01b8 6FF01FF4 		j	.L14
 459              	.LVL39:
 460              	.L20:
 104:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, a0" : :"r"(ret));
 461              		.loc 1 104 35 is_stmt 0
 462 01bc 9307F0FF 		li	a5,-1
 463 01c0 6FF05FFF 		j	.L16
 464              	.LVL40:
 465              	.L6:
 466              	.LBE33:
 107:src/syscall_c.cpp ****                 thread_t handle = nullptr;
 467              		.loc 1 107 13 is_stmt 1
 107:src/syscall_c.cpp ****                 thread_t handle = nullptr;
 468              		.loc 1 107 31
 469              	.LBB34:
 108:src/syscall_c.cpp ****                 __asm__ volatile("mv %0, a1": "=r"(handle));
 470              		.loc 1 108 17
 109:src/syscall_c.cpp **** 
 471              		.loc 1 109 17
 109:src/syscall_c.cpp **** 
GAS LISTING /tmp/cc1lSd5t.s 			page 17


 472              		.loc 1 109 60 is_stmt 0
 473              	#APP
 474              	# 109 "src/syscall_c.cpp" 1
 475              		mv a0, a1
 476              	# 0 "" 2
 477              	.LVL41:
 111:src/syscall_c.cpp ****                 break;}
 478              		.loc 1 111 17 is_stmt 1
 111:src/syscall_c.cpp ****                 break;}
 479              		.loc 1 111 30 is_stmt 0
 480              	#NO_APP
 481 01c8 97000000 		call	_ZN7_thread5startEv@plt
 481      E7800000 
 482              	.LVL42:
 112:src/syscall_c.cpp ****             default:
 483              		.loc 1 112 17 is_stmt 1
 484 01d0 6FF09FF2 		j	.L14
 485              	.LVL43:
 486              	.L5:
 487              	.LBE34:
 113:src/syscall_c.cpp ****                 __asm__ volatile("csrw sepc, %0" : : "r"(&userMain));
 488              		.loc 1 113 13
 114:src/syscall_c.cpp ****                 Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 489              		.loc 1 114 17
 114:src/syscall_c.cpp ****                 Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 490              		.loc 1 114 69 is_stmt 0
 491 01d4 97070000 		la	a5,_Z8userMainPv
 491      83B70700 
 492              	#APP
 493              	# 114 "src/syscall_c.cpp" 1
 115:src/syscall_c.cpp ****                 return;
 494              		csrw sepc, a5
 495              	# 0 "" 2
 496              		.loc 1 115 17 is_stmt 1
 497              	.LVL44:
 498              	#NO_APP
 499              	.LBB35:
 500              	.LBB36:
 174:src/../h/riscv.h **** }
 501              		.loc 2 174 5
 174:src/../h/riscv.h **** }
 502              		.loc 2 174 68 is_stmt 0
 503 01e0 93070010 		li	a5,256
 504              	#APP
 505              	# 174 "src/../h/riscv.h" 1
 506              		csrc sstatus, a5
 507              	# 0 "" 2
 508              	.LVL45:
 509              	#NO_APP
 510              	.LBE36:
 511              	.LBE35:
 116:src/syscall_c.cpp ****                 //__asm__ volatile("sret");
 512              		.loc 1 116 17 is_stmt 1
 513 01e8 6FF01FF2 		j	.L3
 514              	.LVL46:
 515              	.L23:
 516              	.LBE41:
GAS LISTING /tmp/cc1lSd5t.s 			page 18


 517              	.LBE42:
 128:src/syscall_c.cpp ****     } else if (scause == 0x8000000000000009UL)
 518              		.loc 1 128 9
 519              	.LBB43:
 520              	.LBB44:
 152:src/../h/riscv.h **** }
 521              		.loc 2 152 5
 152:src/../h/riscv.h **** }
 522              		.loc 2 152 64 is_stmt 0
 523 01ec 93072000 		li	a5,2
 524              	#APP
 525              	# 152 "src/../h/riscv.h" 1
 153:src/../h/riscv.h **** 
 526              		csrc sip, a5
 527              	# 0 "" 2
 528              		.loc 2 153 1
 529              	#NO_APP
 530 01f4 6FF05FF1 		j	.L3
 531              	.LBE44:
 532              	.LBE43:
 533              	.LBE45:
 534              		.cfi_endproc
 535              	.LFE39:
 537              		.align	2
 538              		.globl	_Z9mem_allocm
 540              	_Z9mem_allocm:
 541              	.LFB40:
 138:src/syscall_c.cpp **** 
 139:src/syscall_c.cpp **** void* mem_alloc(size_t size){
 542              		.loc 1 139 29 is_stmt 1
 543              		.cfi_startproc
 544              	.LVL47:
 545 01f8 130101FF 		addi	sp,sp,-16
 546              		.cfi_def_cfa_offset 16
 547 01fc 23341100 		sd	ra,8(sp)
 548 0200 23308100 		sd	s0,0(sp)
 549              		.cfi_offset 1, -8
 550              		.cfi_offset 8, -16
 551 0204 13040101 		addi	s0,sp,16
 552              		.cfi_def_cfa 8, 0
 140:src/syscall_c.cpp **** 
 141:src/syscall_c.cpp ****     //upis broja blokova
 142:src/syscall_c.cpp ****     size_t numOfBlocks = (size+sizeof(MemoryAllocator::FullMem))/MEM_BLOCK_SIZE
 553              		.loc 1 142 5
 554              		.loc 1 142 31 is_stmt 0
 555 0208 13058501 		addi	a0,a0,24
 556              	.LVL48:
 557              		.loc 1 142 65
 558 020c 93556500 		srli	a1,a0,6
 143:src/syscall_c.cpp ****                          + ((size+sizeof(MemoryAllocator::FullMem))%MEM_BLOCK_SIZE?1:0);
 559              		.loc 1 143 68
 560 0210 1375F503 		andi	a0,a0,63
 561              	.LVL49:
 562              		.loc 1 143 83
 563 0214 63040500 		beqz	a0,.L25
 564 0218 13051000 		li	a0,1
 565              	.L25:
GAS LISTING /tmp/cc1lSd5t.s 			page 19


 566              	.LVL50:
 144:src/syscall_c.cpp **** 
 145:src/syscall_c.cpp ****    // __asm__ volatile("csrw stvec, %[vector] ": : [vector] "r" (&trap));
 146:src/syscall_c.cpp ****     abi_invoker(MEM_ALLOC, numOfBlocks);
 567              		.loc 1 146 5 is_stmt 1
 568              		.loc 1 146 16 is_stmt 0
 569 021c B385A500 		add	a1,a1,a0
 570              	.LVL51:
 571 0220 13051000 		li	a0,1
 572 0224 97000000 		call	_Z11abi_invokeriz
 572      E7800000 
 573              	.LVL52:
 147:src/syscall_c.cpp **** 
 148:src/syscall_c.cpp ****     //povratak
 149:src/syscall_c.cpp ****     void* p = nullptr;
 574              		.loc 1 149 5 is_stmt 1
 150:src/syscall_c.cpp ****     __asm__ volatile("mv a0, %0": "=r"(p));
 575              		.loc 1 150 5
 576              		.loc 1 150 43 is_stmt 0
 577              	#APP
 578              	# 150 "src/syscall_c.cpp" 1
 151              	    return p;
 579              		mv a0, a0
 580              	# 0 "" 2
 581              	.LVL53:
 582              		.loc 1 151 5 is_stmt 1
 152:src/syscall_c.cpp **** 
 153:src/syscall_c.cpp **** }
 583              		.loc 1 153 1 is_stmt 0
 584              	#NO_APP
 585 0230 83308100 		ld	ra,8(sp)
 586              		.cfi_restore 1
 587 0234 03340100 		ld	s0,0(sp)
 588              		.cfi_restore 8
 589              		.cfi_def_cfa 2, 16
 590 0238 13010101 		addi	sp,sp,16
 591              		.cfi_def_cfa_offset 0
 592 023c 67800000 		jr	ra
 593              		.cfi_endproc
 594              	.LFE40:
 596              		.align	2
 597              		.globl	_Z8mem_freePv
 599              	_Z8mem_freePv:
 600              	.LFB41:
 154:src/syscall_c.cpp **** 
 155:src/syscall_c.cpp **** int mem_free(void *p){
 601              		.loc 1 155 22 is_stmt 1
 602              		.cfi_startproc
 603              	.LVL54:
 604 0240 130101FF 		addi	sp,sp,-16
 605              		.cfi_def_cfa_offset 16
 606 0244 23341100 		sd	ra,8(sp)
 607 0248 23308100 		sd	s0,0(sp)
 608              		.cfi_offset 1, -8
 609              		.cfi_offset 8, -16
 610 024c 13040101 		addi	s0,sp,16
 611              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/cc1lSd5t.s 			page 20


 612 0250 93050500 		mv	a1,a0
 156:src/syscall_c.cpp **** 
 157:src/syscall_c.cpp ****     //__asm__ volatile("csrw stvec, %[vector] ": : [vector] "r" (&trap));
 158:src/syscall_c.cpp ****     abi_invoker(MEM_FREE, p);
 613              		.loc 1 158 5
 614              		.loc 1 158 16 is_stmt 0
 615 0254 13052000 		li	a0,2
 616              	.LVL55:
 617 0258 97000000 		call	_Z11abi_invokeriz
 617      E7800000 
 618              	.LVL56:
 159:src/syscall_c.cpp **** 
 160:src/syscall_c.cpp ****     //povratak
 161:src/syscall_c.cpp ****     size_t ret;
 619              		.loc 1 161 5 is_stmt 1
 162:src/syscall_c.cpp ****     __asm__ volatile("mv a0, %0": "=r"(ret));
 620              		.loc 1 162 5
 621              		.loc 1 162 45 is_stmt 0
 622              	#APP
 623              	# 162 "src/syscall_c.cpp" 1
 163              	    return ret;
 624              		mv a0, a0
 625              	# 0 "" 2
 626              	.LVL57:
 627              		.loc 1 163 5 is_stmt 1
 164:src/syscall_c.cpp **** }
 628              		.loc 1 164 1 is_stmt 0
 629              	#NO_APP
 630 0264 1B050500 		sext.w	a0,a0
 631              	.LVL58:
 632 0268 83308100 		ld	ra,8(sp)
 633              		.cfi_restore 1
 634 026c 03340100 		ld	s0,0(sp)
 635              		.cfi_restore 8
 636              		.cfi_def_cfa 2, 16
 637 0270 13010101 		addi	sp,sp,16
 638              		.cfi_def_cfa_offset 0
 639 0274 67800000 		jr	ra
 640              		.cfi_endproc
 641              	.LFE41:
 643              		.align	2
 644              		.globl	_Z11thread_exitv
 646              	_Z11thread_exitv:
 647              	.LFB42:
 165:src/syscall_c.cpp **** 
 166:src/syscall_c.cpp **** int thread_exit(){
 648              		.loc 1 166 18 is_stmt 1
 649              		.cfi_startproc
 650 0278 130101FF 		addi	sp,sp,-16
 651              		.cfi_def_cfa_offset 16
 652 027c 23341100 		sd	ra,8(sp)
 653 0280 23308100 		sd	s0,0(sp)
 654              		.cfi_offset 1, -8
 655              		.cfi_offset 8, -16
 656 0284 13040101 		addi	s0,sp,16
 657              		.cfi_def_cfa 8, 0
 167:src/syscall_c.cpp ****     //__asm__ volatile("csrw stvec, %[vector] ": : [vector] "r" (&trap));
GAS LISTING /tmp/cc1lSd5t.s 			page 21


 168:src/syscall_c.cpp ****     abi_invoker(THREAD_EXIT);
 658              		.loc 1 168 5
 659              		.loc 1 168 16 is_stmt 0
 660 0288 13052001 		li	a0,18
 661 028c 97000000 		call	_Z11abi_invokeriz
 661      E7800000 
 662              	.LVL59:
 169:src/syscall_c.cpp **** 
 170:src/syscall_c.cpp ****     //povratak
 171:src/syscall_c.cpp ****     size_t ret;
 663              		.loc 1 171 5 is_stmt 1
 172:src/syscall_c.cpp ****     __asm__ volatile("mv a0, %0": "=r"(ret));
 664              		.loc 1 172 5
 665              		.loc 1 172 45 is_stmt 0
 666              	#APP
 667              	# 172 "src/syscall_c.cpp" 1
 173              	    return ret;
 668              		mv a0, a0
 669              	# 0 "" 2
 670              	.LVL60:
 671              		.loc 1 173 5 is_stmt 1
 174:src/syscall_c.cpp **** }
 672              		.loc 1 174 1 is_stmt 0
 673              	#NO_APP
 674 0298 1B050500 		sext.w	a0,a0
 675              	.LVL61:
 676 029c 83308100 		ld	ra,8(sp)
 677              		.cfi_restore 1
 678 02a0 03340100 		ld	s0,0(sp)
 679              		.cfi_restore 8
 680              		.cfi_def_cfa 2, 16
 681 02a4 13010101 		addi	sp,sp,16
 682              		.cfi_def_cfa_offset 0
 683 02a8 67800000 		jr	ra
 684              		.cfi_endproc
 685              	.LFE42:
 687              		.align	2
 688              		.globl	_Z13thread_createPP7_threadPFvPvES2_
 690              	_Z13thread_createPP7_threadPFvPvES2_:
 691              	.LFB43:
 175:src/syscall_c.cpp **** 
 176:src/syscall_c.cpp **** int thread_create(thread_t* handle, void(*start_routine)(void*), void* arg){
 692              		.loc 1 176 76 is_stmt 1
 693              		.cfi_startproc
 694              	.LVL62:
 695 02ac 130101FD 		addi	sp,sp,-48
 696              		.cfi_def_cfa_offset 48
 697 02b0 23341102 		sd	ra,40(sp)
 698 02b4 23308102 		sd	s0,32(sp)
 699 02b8 233C9100 		sd	s1,24(sp)
 700 02bc 23382101 		sd	s2,16(sp)
 701 02c0 23343101 		sd	s3,8(sp)
 702              		.cfi_offset 1, -8
 703              		.cfi_offset 8, -16
 704              		.cfi_offset 9, -24
 705              		.cfi_offset 18, -32
 706              		.cfi_offset 19, -40
GAS LISTING /tmp/cc1lSd5t.s 			page 22


 707 02c4 13040103 		addi	s0,sp,48
 708              		.cfi_def_cfa 8, 0
 709 02c8 93040500 		mv	s1,a0
 710 02cc 13890500 		mv	s2,a1
 711 02d0 93090600 		mv	s3,a2
 177:src/syscall_c.cpp ****     void * stack = MemoryAllocator::mem_alloc((DEFAULT_STACK_SIZE+MEM_BLOCK_SIZE-1+sizeof(MemoryAll
 712              		.loc 1 177 5
 713              		.loc 1 177 46 is_stmt 0
 714 02d4 13051004 		li	a0,65
 715              	.LVL63:
 716 02d8 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 716      E7800000 
 717              	.LVL64:
 178:src/syscall_c.cpp ****     if (!stack) return -1;
 718              		.loc 1 178 5 is_stmt 1
 719 02e0 63040506 		beqz	a0,.L34
 720 02e4 13070500 		mv	a4,a0
 179:src/syscall_c.cpp **** 
 180:src/syscall_c.cpp ****     //__asm__ volatile("csrw stvec, %[vector] ": : [vector] "r" (&trap));
 181:src/syscall_c.cpp ****     abi_invoker(THREAD_CREATE, handle, start_routine, arg, stack);
 721              		.loc 1 181 5
 722              		.loc 1 181 16 is_stmt 0
 723 02e8 93860900 		mv	a3,s3
 724 02ec 13060900 		mv	a2,s2
 725 02f0 93850400 		mv	a1,s1
 726 02f4 13051001 		li	a0,17
 727              	.LVL65:
 728 02f8 97000000 		call	_Z11abi_invokeriz
 728      E7800000 
 729              	.LVL66:
 182:src/syscall_c.cpp **** 
 183:src/syscall_c.cpp ****     if(_thread::running == nullptr) _thread::running = *handle;
 730              		.loc 1 183 5 is_stmt 1
 731              		.loc 1 183 25 is_stmt 0
 732 0300 97070000 		la	a5,_ZN7_thread7runningE
 732      83B70700 
 733 0308 83B70700 		ld	a5,0(a5)
 734              		.loc 1 183 5
 735 030c 63840702 		beqz	a5,.L36
 736              	.L33:
 184:src/syscall_c.cpp **** 
 185:src/syscall_c.cpp ****     int ret;
 737              		.loc 1 185 5 is_stmt 1
 186:src/syscall_c.cpp ****     __asm__ volatile("mv a0, %0": "=r"(ret));
 738              		.loc 1 186 5
 739              		.loc 1 186 45 is_stmt 0
 740              	#APP
 741              	# 186 "src/syscall_c.cpp" 1
 187              	    return ret;
 742              		mv a0, a0
 743              	# 0 "" 2
 744              	#NO_APP
 745 0314 1B050500 		sext.w	a0,a0
 746              	.LVL67:
 747              		.loc 1 187 5 is_stmt 1
 748              	.L32:
 188:src/syscall_c.cpp **** }
GAS LISTING /tmp/cc1lSd5t.s 			page 23


 749              		.loc 1 188 1 is_stmt 0
 750 0318 83308102 		ld	ra,40(sp)
 751              		.cfi_remember_state
 752              		.cfi_restore 1
 753 031c 03340102 		ld	s0,32(sp)
 754              		.cfi_restore 8
 755              		.cfi_def_cfa 2, 48
 756 0320 83348101 		ld	s1,24(sp)
 757              		.cfi_restore 9
 758              	.LVL68:
 759 0324 03390101 		ld	s2,16(sp)
 760              		.cfi_restore 18
 761              	.LVL69:
 762 0328 83398100 		ld	s3,8(sp)
 763              		.cfi_restore 19
 764              	.LVL70:
 765 032c 13010103 		addi	sp,sp,48
 766              		.cfi_def_cfa_offset 0
 767 0330 67800000 		jr	ra
 768              	.LVL71:
 769              	.L36:
 770              		.cfi_restore_state
 183:src/syscall_c.cpp **** 
 771              		.loc 1 183 37 is_stmt 1 discriminator 1
 183:src/syscall_c.cpp **** 
 772              		.loc 1 183 56 is_stmt 0 discriminator 1
 773 0334 03B70400 		ld	a4,0(s1)
 183:src/syscall_c.cpp **** 
 774              		.loc 1 183 54 discriminator 1
 775 0338 97070000 		la	a5,_ZN7_thread7runningE
 775      83B70700 
 776 0340 23B0E700 		sd	a4,0(a5)
 777 0344 6FF0DFFC 		j	.L33
 778              	.LVL72:
 779              	.L34:
 178:src/syscall_c.cpp **** 
 780              		.loc 1 178 25
 781 0348 1305F0FF 		li	a0,-1
 782              	.LVL73:
 783 034c 6FF0DFFC 		j	.L32
 784              		.cfi_endproc
 785              	.LFE43:
 787              		.align	2
 788              		.globl	_Z15thread_dispatchv
 790              	_Z15thread_dispatchv:
 791              	.LFB44:
 189:src/syscall_c.cpp **** 
 190:src/syscall_c.cpp **** void thread_dispatch(){
 792              		.loc 1 190 23 is_stmt 1
 793              		.cfi_startproc
 794 0350 130101FF 		addi	sp,sp,-16
 795              		.cfi_def_cfa_offset 16
 796 0354 23341100 		sd	ra,8(sp)
 797 0358 23308100 		sd	s0,0(sp)
 798              		.cfi_offset 1, -8
 799              		.cfi_offset 8, -16
 800 035c 13040101 		addi	s0,sp,16
GAS LISTING /tmp/cc1lSd5t.s 			page 24


 801              		.cfi_def_cfa 8, 0
 191:src/syscall_c.cpp ****     //__asm__ volatile("csrw stvec, %[vector] ": : [vector] "r" (&trap));
 192:src/syscall_c.cpp ****     abi_invoker(THREAD_DISPATCH);
 802              		.loc 1 192 5
 803              		.loc 1 192 16 is_stmt 0
 804 0360 13053001 		li	a0,19
 805 0364 97000000 		call	_Z11abi_invokeriz
 805      E7800000 
 806              	.LVL74:
 193:src/syscall_c.cpp **** }
 807              		.loc 1 193 1
 808 036c 83308100 		ld	ra,8(sp)
 809              		.cfi_restore 1
 810 0370 03340100 		ld	s0,0(sp)
 811              		.cfi_restore 8
 812              		.cfi_def_cfa 2, 16
 813 0374 13010101 		addi	sp,sp,16
 814              		.cfi_def_cfa_offset 0
 815 0378 67800000 		jr	ra
 816              		.cfi_endproc
 817              	.LFE44:
 819              		.align	2
 820              		.globl	_Z18thread_create_onlyPP7_threadPFvPvES2_
 822              	_Z18thread_create_onlyPP7_threadPFvPvES2_:
 823              	.LFB45:
 194:src/syscall_c.cpp **** 
 195:src/syscall_c.cpp **** void thread_create_only(thread_t* handle,
 196:src/syscall_c.cpp ****                         void(*start_routine)(void*),
 197:src/syscall_c.cpp ****                         void* arg){
 824              		.loc 1 197 35 is_stmt 1
 825              		.cfi_startproc
 826              	.LVL75:
 827 037c 130101FD 		addi	sp,sp,-48
 828              		.cfi_def_cfa_offset 48
 829 0380 23341102 		sd	ra,40(sp)
 830 0384 23308102 		sd	s0,32(sp)
 831 0388 233C9100 		sd	s1,24(sp)
 832 038c 23382101 		sd	s2,16(sp)
 833 0390 23343101 		sd	s3,8(sp)
 834              		.cfi_offset 1, -8
 835              		.cfi_offset 8, -16
 836              		.cfi_offset 9, -24
 837              		.cfi_offset 18, -32
 838              		.cfi_offset 19, -40
 839 0394 13040103 		addi	s0,sp,48
 840              		.cfi_def_cfa 8, 0
 841 0398 93040500 		mv	s1,a0
 842 039c 13890500 		mv	s2,a1
 843 03a0 93090600 		mv	s3,a2
 198:src/syscall_c.cpp ****     void * stack = MemoryAllocator::mem_alloc((DEFAULT_STACK_SIZE+MEM_BLOCK_SIZE-1+sizeof(MemoryAll
 844              		.loc 1 198 5
 845              		.loc 1 198 46 is_stmt 0
 846 03a4 13051004 		li	a0,65
 847              	.LVL76:
 848 03a8 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 848      E7800000 
 849              	.LVL77:
GAS LISTING /tmp/cc1lSd5t.s 			page 25


 199:src/syscall_c.cpp ****     if (!stack) return ;
 850              		.loc 1 199 5 is_stmt 1
 851 03b0 63020502 		beqz	a0,.L39
 852 03b4 13070500 		mv	a4,a0
 200:src/syscall_c.cpp **** 
 201:src/syscall_c.cpp ****     //__asm__ volatile("csrw stvec, %[vector] ": : [vector] "r" (&trap));
 202:src/syscall_c.cpp ****     abi_invoker(THREAD_CREATE_ONLY, handle, start_routine, arg, stack);
 853              		.loc 1 202 5
 854              		.loc 1 202 16 is_stmt 0
 855 03b8 93860900 		mv	a3,s3
 856 03bc 13060900 		mv	a2,s2
 857 03c0 93850400 		mv	a1,s1
 858 03c4 13054001 		li	a0,20
 859              	.LVL78:
 860 03c8 97000000 		call	_Z11abi_invokeriz
 860      E7800000 
 861              	.LVL79:
 203:src/syscall_c.cpp **** 
 204:src/syscall_c.cpp ****     int ret;
 862              		.loc 1 204 5 is_stmt 1
 205:src/syscall_c.cpp ****     __asm__ volatile("mv a0, %0": "=r"(ret));
 863              		.loc 1 205 5
 864              		.loc 1 205 45 is_stmt 0
 865              	#APP
 866              	# 205 "src/syscall_c.cpp" 1
 206              	}
 867              		mv a0, a5
 868              	# 0 "" 2
 869              	.LVL80:
 870              	#NO_APP
 871              	.L39:
 872              		.loc 1 206 1
 873 03d4 83308102 		ld	ra,40(sp)
 874              		.cfi_restore 1
 875 03d8 03340102 		ld	s0,32(sp)
 876              		.cfi_restore 8
 877              		.cfi_def_cfa 2, 48
 878 03dc 83348101 		ld	s1,24(sp)
 879              		.cfi_restore 9
 880              	.LVL81:
 881 03e0 03390101 		ld	s2,16(sp)
 882              		.cfi_restore 18
 883              	.LVL82:
 884 03e4 83398100 		ld	s3,8(sp)
 885              		.cfi_restore 19
 886              	.LVL83:
 887 03e8 13010103 		addi	sp,sp,48
 888              		.cfi_def_cfa_offset 0
 889 03ec 67800000 		jr	ra
 890              		.cfi_endproc
 891              	.LFE45:
 893              		.align	2
 894              		.globl	_Z12thread_startP7_thread
 896              	_Z12thread_startP7_thread:
 897              	.LFB46:
 207:src/syscall_c.cpp **** 
 208:src/syscall_c.cpp **** void thread_start(thread_t handle){
GAS LISTING /tmp/cc1lSd5t.s 			page 26


 898              		.loc 1 208 35 is_stmt 1
 899              		.cfi_startproc
 900              	.LVL84:
 901 03f0 130101FF 		addi	sp,sp,-16
 902              		.cfi_def_cfa_offset 16
 903 03f4 23341100 		sd	ra,8(sp)
 904 03f8 23308100 		sd	s0,0(sp)
 905              		.cfi_offset 1, -8
 906              		.cfi_offset 8, -16
 907 03fc 13040101 		addi	s0,sp,16
 908              		.cfi_def_cfa 8, 0
 909 0400 93050500 		mv	a1,a0
 209:src/syscall_c.cpp ****    // __asm__ volatile("csrw stvec, %[vector] ": : [vector] "r" (&trap));
 210:src/syscall_c.cpp ****     abi_invoker(THREAD_START, handle);
 910              		.loc 1 210 5
 911              		.loc 1 210 16 is_stmt 0
 912 0404 13055001 		li	a0,21
 913              	.LVL85:
 914 0408 97000000 		call	_Z11abi_invokeriz
 914      E7800000 
 915              	.LVL86:
 211:src/syscall_c.cpp **** }
 916              		.loc 1 211 1
 917 0410 83308100 		ld	ra,8(sp)
 918              		.cfi_restore 1
 919 0414 03340100 		ld	s0,0(sp)
 920              		.cfi_restore 8
 921              		.cfi_def_cfa 2, 16
 922 0418 13010101 		addi	sp,sp,16
 923              		.cfi_def_cfa_offset 0
 924 041c 67800000 		jr	ra
 925              		.cfi_endproc
 926              	.LFE46:
 928              	.Letext0:
 929              		.file 3 "src/../h/../lib/hw.h"
 930              		.file 4 "src/../h/MemoryAllocator.h"
 931              		.file 5 "src/../h/_thread.h"
 932              		.file 6 "src/../h/syscall_c.h"
 933              		.file 7 "src/../lib/console.h"
GAS LISTING /tmp/cc1lSd5t.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscall_c.cpp
     /tmp/cc1lSd5t.s:9      .text:0000000000000000 _Z11abi_invokeriz
     /tmp/cc1lSd5t.s:13     .text:0000000000000000 .L0 
     /tmp/cc1lSd5t.s:15     .text:0000000000000000 .L0 
     /tmp/cc1lSd5t.s:16     .text:0000000000000004 .L0 
     /tmp/cc1lSd5t.s:18     .text:0000000000000008 .L0 
     /tmp/cc1lSd5t.s:20     .text:000000000000000c .L0 
     /tmp/cc1lSd5t.s:29     .text:0000000000000028 .L0 
   src/syscall_c.cpp:26     .text:0000000000000028 .L0 
     /tmp/cc1lSd5t.s:36     .text:000000000000002c .L0 
     /tmp/cc1lSd5t.s:37     .text:0000000000000030 .L0 
     /tmp/cc1lSd5t.s:38     .text:0000000000000030 .L0 
     /tmp/cc1lSd5t.s:40     .text:0000000000000034 .L0 
     /tmp/cc1lSd5t.s:42     .text:0000000000000038 .L0 
     /tmp/cc1lSd5t.s:48     .text:0000000000000038 trapHandler
     /tmp/cc1lSd5t.s:51     .text:0000000000000038 .L0 
     /tmp/cc1lSd5t.s:52     .text:0000000000000038 .L0 
     /tmp/cc1lSd5t.s:53     .text:000000000000003c .L0 
     /tmp/cc1lSd5t.s:57     .text:0000000000000048 .L0 
     /tmp/cc1lSd5t.s:58     .text:0000000000000048 .L0 
     /tmp/cc1lSd5t.s:59     .text:0000000000000048 .L0 
     /tmp/cc1lSd5t.s:61     .text:000000000000004c .L0 
     /tmp/cc1lSd5t.s:66     .text:000000000000004c .L0 
     /tmp/cc1lSd5t.s:67     .text:000000000000004c .L0 
     /tmp/cc1lSd5t.s:68     .text:000000000000004c .L0 
    src/../h/riscv.h:100    .text:000000000000004c .L0 
     /tmp/cc1lSd5t.s:78     .text:0000000000000050 .L0 
     /tmp/cc1lSd5t.s:80     .text:0000000000000050 .L0 
     /tmp/cc1lSd5t.s:81     .text:0000000000000050 .L0 
     /tmp/cc1lSd5t.s:83     .text:0000000000000054 .L0 
     /tmp/cc1lSd5t.s:86     .text:000000000000005c .L0 
     /tmp/cc1lSd5t.s:91     .text:000000000000006c .L0 
     /tmp/cc1lSd5t.s:96     .text:000000000000007c .L0 
     /tmp/cc1lSd5t.s:97     .text:000000000000007c .L0 
     /tmp/cc1lSd5t.s:104    .text:0000000000000088 .L0 
     /tmp/cc1lSd5t.s:105    .text:0000000000000088 .L0 
     /tmp/cc1lSd5t.s:107    .text:000000000000008c .L0 
   src/syscall_c.cpp:36     .text:000000000000008c .L0 
     /tmp/cc1lSd5t.s:115    .text:0000000000000094 .L0 
     /tmp/cc1lSd5t.s:116    .text:0000000000000094 .L0 
     /tmp/cc1lSd5t.s:122    .text:00000000000000a0 .L0 
     /tmp/cc1lSd5t.s:123    .text:00000000000000a0 .L0 
     /tmp/cc1lSd5t.s:124    .text:00000000000000a0 .L0 
    src/../h/riscv.h:180    .text:00000000000000a0 .L0 
     /tmp/cc1lSd5t.s:132    .text:00000000000000a8 .L0 
     /tmp/cc1lSd5t.s:133    .text:00000000000000a8 .L0 
     /tmp/cc1lSd5t.s:137    .text:00000000000000ac .L0 
     /tmp/cc1lSd5t.s:139    .text:00000000000000b0 .L0 
     /tmp/cc1lSd5t.s:140    .text:00000000000000b0 .L0 
   src/syscall_c.cpp:42     .text:00000000000000b0 .L0 
     /tmp/cc1lSd5t.s:148    .text:00000000000000b4 .L0 
     /tmp/cc1lSd5t.s:188    .text:00000000000000d8 .L0 
     /tmp/cc1lSd5t.s:190    .text:00000000000000d8 .L0 
     /tmp/cc1lSd5t.s:191    .text:00000000000000d8 .L0 
     /tmp/cc1lSd5t.s:192    .text:00000000000000d8 .L0 
   src/syscall_c.cpp:48     .text:00000000000000d8 .L0 
GAS LISTING /tmp/cc1lSd5t.s 			page 28


     /tmp/cc1lSd5t.s:199    .text:00000000000000dc .L0 
     /tmp/cc1lSd5t.s:201    .text:00000000000000dc .L0 
     /tmp/cc1lSd5t.s:204    .text:00000000000000e4 .L0 
     /tmp/cc1lSd5t.s:208    .text:00000000000000f0 .L0 
   src/syscall_c.cpp:51     .text:00000000000000f0 .L0 
     /tmp/cc1lSd5t.s:214    .text:00000000000000f4 .L0 
   src/syscall_c.cpp:53     .text:00000000000000f4 .L0 
     /tmp/cc1lSd5t.s:224    .text:00000000000000f8 .L0 
     /tmp/cc1lSd5t.s:225    .text:00000000000000f8 .L0 
     /tmp/cc1lSd5t.s:226    .text:00000000000000f8 .L0 
     /tmp/cc1lSd5t.s:231    .text:00000000000000fc .L0 
    src/../h/riscv.h:118    .text:00000000000000fc .L0 
     /tmp/cc1lSd5t.s:241    .text:0000000000000100 .L0 
     /tmp/cc1lSd5t.s:242    .text:0000000000000100 .L0 
     /tmp/cc1lSd5t.s:247    .text:0000000000000104 .L0 
    src/../h/riscv.h:186    .text:0000000000000104 .L0 
     /tmp/cc1lSd5t.s:260    .text:0000000000000108 .L0 
     /tmp/cc1lSd5t.s:261    .text:000000000000010c .L0 
     /tmp/cc1lSd5t.s:262    .text:000000000000010c .L0 
     /tmp/cc1lSd5t.s:264    .text:0000000000000110 .L0 
     /tmp/cc1lSd5t.s:265    .text:0000000000000110 .L0 
     /tmp/cc1lSd5t.s:267    .text:0000000000000114 .L0 
     /tmp/cc1lSd5t.s:269    .text:0000000000000118 .L0 
     /tmp/cc1lSd5t.s:273    .text:000000000000011c .L0 
     /tmp/cc1lSd5t.s:278    .text:000000000000011c .L0 
     /tmp/cc1lSd5t.s:280    .text:000000000000011c .L0 
     /tmp/cc1lSd5t.s:281    .text:000000000000011c .L0 
     /tmp/cc1lSd5t.s:282    .text:000000000000011c .L0 
   src/syscall_c.cpp:58     .text:000000000000011c .L0 
     /tmp/cc1lSd5t.s:289    .text:0000000000000120 .L0 
     /tmp/cc1lSd5t.s:291    .text:0000000000000120 .L0 
     /tmp/cc1lSd5t.s:294    .text:0000000000000128 .L0 
     /tmp/cc1lSd5t.s:299    .text:000000000000012c .L0 
     /tmp/cc1lSd5t.s:301    .text:000000000000012c .L0 
     /tmp/cc1lSd5t.s:302    .text:000000000000012c .L0 
   src/syscall_c.cpp:63     .text:000000000000012c .L0 
     /tmp/cc1lSd5t.s:308    .text:0000000000000130 .L0 
   src/syscall_c.cpp:64     .text:0000000000000130 .L0 
     /tmp/cc1lSd5t.s:313    .text:0000000000000134 .L0 
   src/syscall_c.cpp:65     .text:0000000000000134 .L0 
     /tmp/cc1lSd5t.s:319    .text:0000000000000138 .L0 
     /tmp/cc1lSd5t.s:320    .text:0000000000000138 .L0 
   src/syscall_c.cpp:67     .text:0000000000000138 .L0 
     /tmp/cc1lSd5t.s:326    .text:000000000000013c .L0 
     /tmp/cc1lSd5t.s:327    .text:000000000000013c .L0 
   src/syscall_c.cpp:69     .text:000000000000013c .L0 
     /tmp/cc1lSd5t.s:333    .text:0000000000000140 .L0 
     /tmp/cc1lSd5t.s:334    .text:0000000000000140 .L0 
   src/syscall_c.cpp:71     .text:0000000000000140 .L0 
     /tmp/cc1lSd5t.s:340    .text:0000000000000144 .L0 
     /tmp/cc1lSd5t.s:342    .text:0000000000000144 .L0 
     /tmp/cc1lSd5t.s:345    .text:000000000000014c .L0 
     /tmp/cc1lSd5t.s:347    .text:0000000000000150 .L0 
     /tmp/cc1lSd5t.s:348    .text:0000000000000150 .L0 
     /tmp/cc1lSd5t.s:351    .text:0000000000000158 .L0 
     /tmp/cc1lSd5t.s:352    .text:0000000000000158 .L0 
     /tmp/cc1lSd5t.s:354    .text:000000000000015c .L0 
GAS LISTING /tmp/cc1lSd5t.s 			page 29


     /tmp/cc1lSd5t.s:358    .text:0000000000000160 .L0 
   src/syscall_c.cpp:78     .text:0000000000000160 .L0 
     /tmp/cc1lSd5t.s:365    .text:0000000000000164 .L0 
     /tmp/cc1lSd5t.s:369    .text:0000000000000168 .L0 
     /tmp/cc1lSd5t.s:375    .text:0000000000000170 .L0 
     /tmp/cc1lSd5t.s:376    .text:0000000000000170 .L0 
     /tmp/cc1lSd5t.s:377    .text:0000000000000170 .L0 
     /tmp/cc1lSd5t.s:378    .text:0000000000000170 .L0 
     /tmp/cc1lSd5t.s:381    .text:0000000000000178 .L0 
     /tmp/cc1lSd5t.s:385    .text:000000000000017c .L0 
     /tmp/cc1lSd5t.s:386    .text:000000000000017c .L0 
     /tmp/cc1lSd5t.s:387    .text:000000000000017c .L0 
     /tmp/cc1lSd5t.s:388    .text:000000000000017c .L0 
     /tmp/cc1lSd5t.s:391    .text:0000000000000184 .L0 
     /tmp/cc1lSd5t.s:395    .text:0000000000000188 .L0 
     /tmp/cc1lSd5t.s:397    .text:0000000000000188 .L0 
     /tmp/cc1lSd5t.s:398    .text:0000000000000188 .L0 
   src/syscall_c.cpp:91     .text:0000000000000188 .L0 
     /tmp/cc1lSd5t.s:404    .text:000000000000018c .L0 
   src/syscall_c.cpp:92     .text:000000000000018c .L0 
     /tmp/cc1lSd5t.s:409    .text:0000000000000190 .L0 
   src/syscall_c.cpp:93     .text:0000000000000190 .L0 
     /tmp/cc1lSd5t.s:415    .text:0000000000000194 .L0 
     /tmp/cc1lSd5t.s:416    .text:0000000000000194 .L0 
   src/syscall_c.cpp:95     .text:0000000000000194 .L0 
     /tmp/cc1lSd5t.s:422    .text:0000000000000198 .L0 
     /tmp/cc1lSd5t.s:423    .text:0000000000000198 .L0 
   src/syscall_c.cpp:97     .text:0000000000000198 .L0 
     /tmp/cc1lSd5t.s:429    .text:000000000000019c .L0 
     /tmp/cc1lSd5t.s:430    .text:000000000000019c .L0 
   src/syscall_c.cpp:99     .text:000000000000019c .L0 
     /tmp/cc1lSd5t.s:436    .text:00000000000001a0 .L0 
     /tmp/cc1lSd5t.s:438    .text:00000000000001a0 .L0 
     /tmp/cc1lSd5t.s:441    .text:00000000000001a8 .L0 
     /tmp/cc1lSd5t.s:444    .text:00000000000001ac .L0 
     /tmp/cc1lSd5t.s:445    .text:00000000000001ac .L0 
     /tmp/cc1lSd5t.s:447    .text:00000000000001b0 .L0 
     /tmp/cc1lSd5t.s:451    .text:00000000000001b4 .L0 
   src/syscall_c.cpp:105    .text:00000000000001b4 .L0 
     /tmp/cc1lSd5t.s:458    .text:00000000000001b8 .L0 
     /tmp/cc1lSd5t.s:462    .text:00000000000001bc .L0 
     /tmp/cc1lSd5t.s:468    .text:00000000000001c4 .L0 
     /tmp/cc1lSd5t.s:470    .text:00000000000001c4 .L0 
     /tmp/cc1lSd5t.s:471    .text:00000000000001c4 .L0 
     /tmp/cc1lSd5t.s:472    .text:00000000000001c4 .L0 
   src/syscall_c.cpp:109    .text:00000000000001c4 .L0 
     /tmp/cc1lSd5t.s:479    .text:00000000000001c8 .L0 
     /tmp/cc1lSd5t.s:481    .text:00000000000001c8 .L0 
     /tmp/cc1lSd5t.s:484    .text:00000000000001d0 .L0 
     /tmp/cc1lSd5t.s:489    .text:00000000000001d4 .L0 
     /tmp/cc1lSd5t.s:490    .text:00000000000001d4 .L0 
     /tmp/cc1lSd5t.s:491    .text:00000000000001d4 .L0 
     /tmp/cc1lSd5t.s:501    .text:00000000000001e0 .L0 
     /tmp/cc1lSd5t.s:502    .text:00000000000001e0 .L0 
     /tmp/cc1lSd5t.s:503    .text:00000000000001e0 .L0 
     /tmp/cc1lSd5t.s:513    .text:00000000000001e8 .L0 
     /tmp/cc1lSd5t.s:521    .text:00000000000001ec .L0 
GAS LISTING /tmp/cc1lSd5t.s 			page 30


     /tmp/cc1lSd5t.s:522    .text:00000000000001ec .L0 
     /tmp/cc1lSd5t.s:523    .text:00000000000001ec .L0 
     /tmp/cc1lSd5t.s:530    .text:00000000000001f4 .L0 
     /tmp/cc1lSd5t.s:534    .text:00000000000001f8 .L0 
     /tmp/cc1lSd5t.s:540    .text:00000000000001f8 _Z9mem_allocm
     /tmp/cc1lSd5t.s:543    .text:00000000000001f8 .L0 
     /tmp/cc1lSd5t.s:545    .text:00000000000001f8 .L0 
     /tmp/cc1lSd5t.s:546    .text:00000000000001fc .L0 
     /tmp/cc1lSd5t.s:549    .text:0000000000000204 .L0 
     /tmp/cc1lSd5t.s:550    .text:0000000000000204 .L0 
     /tmp/cc1lSd5t.s:552    .text:0000000000000208 .L0 
     /tmp/cc1lSd5t.s:554    .text:0000000000000208 .L0 
     /tmp/cc1lSd5t.s:555    .text:0000000000000208 .L0 
     /tmp/cc1lSd5t.s:558    .text:000000000000020c .L0 
     /tmp/cc1lSd5t.s:560    .text:0000000000000210 .L0 
     /tmp/cc1lSd5t.s:563    .text:0000000000000214 .L0 
     /tmp/cc1lSd5t.s:568    .text:000000000000021c .L0 
     /tmp/cc1lSd5t.s:569    .text:000000000000021c .L0 
     /tmp/cc1lSd5t.s:575    .text:000000000000022c .L0 
     /tmp/cc1lSd5t.s:576    .text:000000000000022c .L0 
   src/syscall_c.cpp:150    .text:000000000000022c .L0 
     /tmp/cc1lSd5t.s:583    .text:0000000000000230 .L0 
     /tmp/cc1lSd5t.s:585    .text:0000000000000230 .L0 
     /tmp/cc1lSd5t.s:586    .text:0000000000000234 .L0 
     /tmp/cc1lSd5t.s:588    .text:0000000000000238 .L0 
     /tmp/cc1lSd5t.s:589    .text:0000000000000238 .L0 
     /tmp/cc1lSd5t.s:591    .text:000000000000023c .L0 
     /tmp/cc1lSd5t.s:593    .text:0000000000000240 .L0 
     /tmp/cc1lSd5t.s:599    .text:0000000000000240 _Z8mem_freePv
     /tmp/cc1lSd5t.s:602    .text:0000000000000240 .L0 
     /tmp/cc1lSd5t.s:604    .text:0000000000000240 .L0 
     /tmp/cc1lSd5t.s:605    .text:0000000000000244 .L0 
     /tmp/cc1lSd5t.s:608    .text:000000000000024c .L0 
     /tmp/cc1lSd5t.s:609    .text:000000000000024c .L0 
     /tmp/cc1lSd5t.s:611    .text:0000000000000250 .L0 
     /tmp/cc1lSd5t.s:614    .text:0000000000000254 .L0 
     /tmp/cc1lSd5t.s:615    .text:0000000000000254 .L0 
     /tmp/cc1lSd5t.s:620    .text:0000000000000260 .L0 
     /tmp/cc1lSd5t.s:621    .text:0000000000000260 .L0 
   src/syscall_c.cpp:162    .text:0000000000000260 .L0 
     /tmp/cc1lSd5t.s:628    .text:0000000000000264 .L0 
     /tmp/cc1lSd5t.s:630    .text:0000000000000264 .L0 
     /tmp/cc1lSd5t.s:633    .text:000000000000026c .L0 
     /tmp/cc1lSd5t.s:635    .text:0000000000000270 .L0 
     /tmp/cc1lSd5t.s:636    .text:0000000000000270 .L0 
     /tmp/cc1lSd5t.s:638    .text:0000000000000274 .L0 
     /tmp/cc1lSd5t.s:640    .text:0000000000000278 .L0 
     /tmp/cc1lSd5t.s:646    .text:0000000000000278 _Z11thread_exitv
     /tmp/cc1lSd5t.s:649    .text:0000000000000278 .L0 
     /tmp/cc1lSd5t.s:650    .text:0000000000000278 .L0 
     /tmp/cc1lSd5t.s:651    .text:000000000000027c .L0 
     /tmp/cc1lSd5t.s:654    .text:0000000000000284 .L0 
     /tmp/cc1lSd5t.s:655    .text:0000000000000284 .L0 
     /tmp/cc1lSd5t.s:657    .text:0000000000000288 .L0 
     /tmp/cc1lSd5t.s:659    .text:0000000000000288 .L0 
     /tmp/cc1lSd5t.s:660    .text:0000000000000288 .L0 
     /tmp/cc1lSd5t.s:664    .text:0000000000000294 .L0 
GAS LISTING /tmp/cc1lSd5t.s 			page 31


     /tmp/cc1lSd5t.s:665    .text:0000000000000294 .L0 
   src/syscall_c.cpp:172    .text:0000000000000294 .L0 
     /tmp/cc1lSd5t.s:672    .text:0000000000000298 .L0 
     /tmp/cc1lSd5t.s:674    .text:0000000000000298 .L0 
     /tmp/cc1lSd5t.s:677    .text:00000000000002a0 .L0 
     /tmp/cc1lSd5t.s:679    .text:00000000000002a4 .L0 
     /tmp/cc1lSd5t.s:680    .text:00000000000002a4 .L0 
     /tmp/cc1lSd5t.s:682    .text:00000000000002a8 .L0 
     /tmp/cc1lSd5t.s:684    .text:00000000000002ac .L0 
     /tmp/cc1lSd5t.s:690    .text:00000000000002ac _Z13thread_createPP7_threadPFvPvES2_
     /tmp/cc1lSd5t.s:693    .text:00000000000002ac .L0 
     /tmp/cc1lSd5t.s:695    .text:00000000000002ac .L0 
     /tmp/cc1lSd5t.s:696    .text:00000000000002b0 .L0 
     /tmp/cc1lSd5t.s:702    .text:00000000000002c4 .L0 
     /tmp/cc1lSd5t.s:703    .text:00000000000002c4 .L0 
     /tmp/cc1lSd5t.s:704    .text:00000000000002c4 .L0 
     /tmp/cc1lSd5t.s:705    .text:00000000000002c4 .L0 
     /tmp/cc1lSd5t.s:706    .text:00000000000002c4 .L0 
     /tmp/cc1lSd5t.s:708    .text:00000000000002c8 .L0 
     /tmp/cc1lSd5t.s:713    .text:00000000000002d4 .L0 
     /tmp/cc1lSd5t.s:714    .text:00000000000002d4 .L0 
     /tmp/cc1lSd5t.s:719    .text:00000000000002e0 .L0 
     /tmp/cc1lSd5t.s:722    .text:00000000000002e8 .L0 
     /tmp/cc1lSd5t.s:723    .text:00000000000002e8 .L0 
     /tmp/cc1lSd5t.s:731    .text:0000000000000300 .L0 
     /tmp/cc1lSd5t.s:732    .text:0000000000000300 .L0 
     /tmp/cc1lSd5t.s:735    .text:000000000000030c .L0 
     /tmp/cc1lSd5t.s:738    .text:0000000000000310 .L0 
     /tmp/cc1lSd5t.s:739    .text:0000000000000310 .L0 
   src/syscall_c.cpp:186    .text:0000000000000310 .L0 
     /tmp/cc1lSd5t.s:749    .text:0000000000000318 .L0 
     /tmp/cc1lSd5t.s:750    .text:0000000000000318 .L0 
     /tmp/cc1lSd5t.s:751    .text:000000000000031c .L0 
     /tmp/cc1lSd5t.s:752    .text:000000000000031c .L0 
     /tmp/cc1lSd5t.s:754    .text:0000000000000320 .L0 
     /tmp/cc1lSd5t.s:755    .text:0000000000000320 .L0 
     /tmp/cc1lSd5t.s:757    .text:0000000000000324 .L0 
     /tmp/cc1lSd5t.s:760    .text:0000000000000328 .L0 
     /tmp/cc1lSd5t.s:763    .text:000000000000032c .L0 
     /tmp/cc1lSd5t.s:766    .text:0000000000000330 .L0 
     /tmp/cc1lSd5t.s:770    .text:0000000000000334 .L0 
     /tmp/cc1lSd5t.s:772    .text:0000000000000334 .L0 
     /tmp/cc1lSd5t.s:773    .text:0000000000000334 .L0 
     /tmp/cc1lSd5t.s:775    .text:0000000000000338 .L0 
     /tmp/cc1lSd5t.s:781    .text:0000000000000348 .L0 
     /tmp/cc1lSd5t.s:784    .text:0000000000000350 .L0 
     /tmp/cc1lSd5t.s:790    .text:0000000000000350 _Z15thread_dispatchv
     /tmp/cc1lSd5t.s:793    .text:0000000000000350 .L0 
     /tmp/cc1lSd5t.s:794    .text:0000000000000350 .L0 
     /tmp/cc1lSd5t.s:795    .text:0000000000000354 .L0 
     /tmp/cc1lSd5t.s:798    .text:000000000000035c .L0 
     /tmp/cc1lSd5t.s:799    .text:000000000000035c .L0 
     /tmp/cc1lSd5t.s:801    .text:0000000000000360 .L0 
     /tmp/cc1lSd5t.s:803    .text:0000000000000360 .L0 
     /tmp/cc1lSd5t.s:804    .text:0000000000000360 .L0 
     /tmp/cc1lSd5t.s:808    .text:000000000000036c .L0 
     /tmp/cc1lSd5t.s:809    .text:0000000000000370 .L0 
GAS LISTING /tmp/cc1lSd5t.s 			page 32


     /tmp/cc1lSd5t.s:811    .text:0000000000000374 .L0 
     /tmp/cc1lSd5t.s:812    .text:0000000000000374 .L0 
     /tmp/cc1lSd5t.s:814    .text:0000000000000378 .L0 
     /tmp/cc1lSd5t.s:816    .text:000000000000037c .L0 
     /tmp/cc1lSd5t.s:822    .text:000000000000037c _Z18thread_create_onlyPP7_threadPFvPvES2_
     /tmp/cc1lSd5t.s:825    .text:000000000000037c .L0 
     /tmp/cc1lSd5t.s:827    .text:000000000000037c .L0 
     /tmp/cc1lSd5t.s:828    .text:0000000000000380 .L0 
     /tmp/cc1lSd5t.s:834    .text:0000000000000394 .L0 
     /tmp/cc1lSd5t.s:835    .text:0000000000000394 .L0 
     /tmp/cc1lSd5t.s:836    .text:0000000000000394 .L0 
     /tmp/cc1lSd5t.s:837    .text:0000000000000394 .L0 
     /tmp/cc1lSd5t.s:838    .text:0000000000000394 .L0 
     /tmp/cc1lSd5t.s:840    .text:0000000000000398 .L0 
     /tmp/cc1lSd5t.s:845    .text:00000000000003a4 .L0 
     /tmp/cc1lSd5t.s:846    .text:00000000000003a4 .L0 
     /tmp/cc1lSd5t.s:851    .text:00000000000003b0 .L0 
     /tmp/cc1lSd5t.s:854    .text:00000000000003b8 .L0 
     /tmp/cc1lSd5t.s:855    .text:00000000000003b8 .L0 
     /tmp/cc1lSd5t.s:863    .text:00000000000003d0 .L0 
     /tmp/cc1lSd5t.s:864    .text:00000000000003d0 .L0 
   src/syscall_c.cpp:205    .text:00000000000003d0 .L0 
     /tmp/cc1lSd5t.s:873    .text:00000000000003d4 .L0 
     /tmp/cc1lSd5t.s:874    .text:00000000000003d8 .L0 
     /tmp/cc1lSd5t.s:876    .text:00000000000003dc .L0 
     /tmp/cc1lSd5t.s:877    .text:00000000000003dc .L0 
     /tmp/cc1lSd5t.s:879    .text:00000000000003e0 .L0 
     /tmp/cc1lSd5t.s:882    .text:00000000000003e4 .L0 
     /tmp/cc1lSd5t.s:885    .text:00000000000003e8 .L0 
     /tmp/cc1lSd5t.s:888    .text:00000000000003ec .L0 
     /tmp/cc1lSd5t.s:890    .text:00000000000003f0 .L0 
     /tmp/cc1lSd5t.s:896    .text:00000000000003f0 _Z12thread_startP7_thread
     /tmp/cc1lSd5t.s:899    .text:00000000000003f0 .L0 
     /tmp/cc1lSd5t.s:901    .text:00000000000003f0 .L0 
     /tmp/cc1lSd5t.s:902    .text:00000000000003f4 .L0 
     /tmp/cc1lSd5t.s:905    .text:00000000000003fc .L0 
     /tmp/cc1lSd5t.s:906    .text:00000000000003fc .L0 
     /tmp/cc1lSd5t.s:908    .text:0000000000000400 .L0 
     /tmp/cc1lSd5t.s:911    .text:0000000000000404 .L0 
     /tmp/cc1lSd5t.s:912    .text:0000000000000404 .L0 
     /tmp/cc1lSd5t.s:917    .text:0000000000000410 .L0 
     /tmp/cc1lSd5t.s:918    .text:0000000000000414 .L0 
     /tmp/cc1lSd5t.s:920    .text:0000000000000418 .L0 
     /tmp/cc1lSd5t.s:921    .text:0000000000000418 .L0 
     /tmp/cc1lSd5t.s:923    .text:000000000000041c .L0 
     /tmp/cc1lSd5t.s:925    .text:0000000000000420 .L0 
     /tmp/cc1lSd5t.s:934    .text:0000000000000420 .L0 
     /tmp/cc1lSd5t.s:161    .rodata:0000000000000000 .L7
     /tmp/cc1lSd5t.s:153    .text:00000000000000c0 .L0 
     /tmp/cc1lSd5t.s:491    .text:00000000000001d4 .L0 
     /tmp/cc1lSd5t.s:732    .text:0000000000000300 .L0 
     /tmp/cc1lSd5t.s:775    .text:0000000000000338 .L0 
     /tmp/cc1lSd5t.s:101    .text:0000000000000088 .L22
     /tmp/cc1lSd5t.s:515    .text:00000000000001ec .L23
     /tmp/cc1lSd5t.s:254    .text:0000000000000108 .L3
     /tmp/cc1lSd5t.s:486    .text:00000000000001d4 .L5
     /tmp/cc1lSd5t.s:221    .text:00000000000000f8 .L14
GAS LISTING /tmp/cc1lSd5t.s 			page 33


     /tmp/cc1lSd5t.s:367    .text:0000000000000168 .L19
     /tmp/cc1lSd5t.s:355    .text:0000000000000160 .L15
     /tmp/cc1lSd5t.s:460    .text:00000000000001bc .L20
     /tmp/cc1lSd5t.s:448    .text:00000000000001b4 .L16
     /tmp/cc1lSd5t.s:565    .text:000000000000021c .L25
     /tmp/cc1lSd5t.s:779    .text:0000000000000348 .L34
     /tmp/cc1lSd5t.s:769    .text:0000000000000334 .L36
     /tmp/cc1lSd5t.s:736    .text:0000000000000310 .L33
     /tmp/cc1lSd5t.s:748    .text:0000000000000318 .L32
     /tmp/cc1lSd5t.s:871    .text:00000000000003d4 .L39
     /tmp/cc1lSd5t.s:185    .text:00000000000000d8 .L13
     /tmp/cc1lSd5t.s:272    .text:000000000000011c .L12
     /tmp/cc1lSd5t.s:296    .text:000000000000012c .L11
     /tmp/cc1lSd5t.s:372    .text:0000000000000170 .L10
     /tmp/cc1lSd5t.s:383    .text:000000000000017c .L9
     /tmp/cc1lSd5t.s:393    .text:0000000000000188 .L8
     /tmp/cc1lSd5t.s:465    .text:00000000000001c4 .L6
     /tmp/cc1lSd5t.s:2538   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc1lSd5t.s:4393   .debug_str:0000000000000854 .LASF157
     /tmp/cc1lSd5t.s:4243   .debug_str:000000000000041c .LASF158
     /tmp/cc1lSd5t.s:4433   .debug_str:0000000000000a6b .LASF159
     /tmp/cc1lSd5t.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc1lSd5t.s:928    .text:0000000000000420 .Letext0
     /tmp/cc1lSd5t.s:4103   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc1lSd5t.s:4293   .debug_str:0000000000000592 .LASF0
     /tmp/cc1lSd5t.s:4319   .debug_str:0000000000000618 .LASF1
     /tmp/cc1lSd5t.s:4273   .debug_str:0000000000000505 .LASF2
     /tmp/cc1lSd5t.s:4237   .debug_str:00000000000003f1 .LASF4
     /tmp/cc1lSd5t.s:4363   .debug_str:0000000000000752 .LASF3
     /tmp/cc1lSd5t.s:4135   .debug_str:00000000000000d5 .LASF5
     /tmp/cc1lSd5t.s:4323   .debug_str:000000000000063c .LASF6
     /tmp/cc1lSd5t.s:4291   .debug_str:000000000000057f .LASF7
     /tmp/cc1lSd5t.s:4407   .debug_str:0000000000000994 .LASF8
     /tmp/cc1lSd5t.s:4217   .debug_str:000000000000034b .LASF9
     /tmp/cc1lSd5t.s:4333   .debug_str:0000000000000687 .LASF10
     /tmp/cc1lSd5t.s:4399   .debug_str:000000000000093d .LASF11
     /tmp/cc1lSd5t.s:4139   .debug_str:00000000000000e8 .LASF12
     /tmp/cc1lSd5t.s:4111   .debug_str:000000000000003e .LASF13
     /tmp/cc1lSd5t.s:4149   .debug_str:000000000000013f .LASF14
     /tmp/cc1lSd5t.s:4353   .debug_str:0000000000000706 .LASF15
     /tmp/cc1lSd5t.s:4167   .debug_str:00000000000001aa .LASF16
     /tmp/cc1lSd5t.s:4269   .debug_str:00000000000004da .LASF25
     /tmp/cc1lSd5t.s:4199   .debug_str:00000000000002b1 .LASF20
     /tmp/cc1lSd5t.s:4435   .debug_str:0000000000000a88 .LASF17
     /tmp/cc1lSd5t.s:4421   .debug_str:0000000000000a16 .LASF18
     /tmp/cc1lSd5t.s:4381   .debug_str:00000000000007e1 .LASF19
     /tmp/cc1lSd5t.s:4285   .debug_str:000000000000055b .LASF21
     /tmp/cc1lSd5t.s:4179   .debug_str:0000000000000208 .LASF30
     /tmp/cc1lSd5t.s:4143   .debug_str:0000000000000100 .LASF22
     /tmp/cc1lSd5t.s:4331   .debug_str:000000000000067d .LASF23
     /tmp/cc1lSd5t.s:4175   .debug_str:00000000000001ee .LASF24
     /tmp/cc1lSd5t.s:4299   .debug_str:00000000000005af .LASF27
     /tmp/cc1lSd5t.s:4283   .debug_str:0000000000000551 .LASF26
     /tmp/cc1lSd5t.s:4257   .debug_str:0000000000000466 .LASF28
     /tmp/cc1lSd5t.s:4395   .debug_str:0000000000000918 .LASF43
     /tmp/cc1lSd5t.s:4133   .debug_str:00000000000000b1 .LASF45
     /tmp/cc1lSd5t.s:4367   .debug_str:0000000000000775 .LASF33
GAS LISTING /tmp/cc1lSd5t.s 			page 34


     /tmp/cc1lSd5t.s:4377   .debug_str:00000000000007b9 .LASF35
     /tmp/cc1lSd5t.s:4337   .debug_str:00000000000006b3 .LASF29
     /tmp/cc1lSd5t.s:4215   .debug_str:000000000000032a .LASF31
     /tmp/cc1lSd5t.s:4235   .debug_str:00000000000003e9 .LASF32
     /tmp/cc1lSd5t.s:4117   .debug_str:000000000000005e .LASF160
     /tmp/cc1lSd5t.s:4403   .debug_str:0000000000000978 .LASF34
     /tmp/cc1lSd5t.s:4327   .debug_str:000000000000065a .LASF36
     /tmp/cc1lSd5t.s:4325   .debug_str:000000000000064f .LASF37
     /tmp/cc1lSd5t.s:4271   .debug_str:00000000000004ea .LASF38
     /tmp/cc1lSd5t.s:4275   .debug_str:0000000000000513 .LASF39
     /tmp/cc1lSd5t.s:4107   .debug_str:0000000000000009 .LASF40
     /tmp/cc1lSd5t.s:4267   .debug_str:00000000000004cd .LASF41
     /tmp/cc1lSd5t.s:4335   .debug_str:0000000000000696 .LASF42
     /tmp/cc1lSd5t.s:4211   .debug_str:0000000000000304 .LASF49
     /tmp/cc1lSd5t.s:4279   .debug_str:0000000000000526 .LASF51
     /tmp/cc1lSd5t.s:4423   .debug_str:0000000000000a1b .LASF44
     /tmp/cc1lSd5t.s:4409   .debug_str:00000000000009a4 .LASF46
     /tmp/cc1lSd5t.s:4251   .debug_str:0000000000000444 .LASF47
     /tmp/cc1lSd5t.s:4419   .debug_str:00000000000009f2 .LASF48
     /tmp/cc1lSd5t.s:4347   .debug_str:00000000000006ed .LASF161
     /tmp/cc1lSd5t.s:4355   .debug_str:000000000000071c .LASF50
     /tmp/cc1lSd5t.s:4387   .debug_str:0000000000000827 .LASF52
     /tmp/cc1lSd5t.s:4297   .debug_str:00000000000005a6 .LASF53
     /tmp/cc1lSd5t.s:4385   .debug_str:0000000000000810 .LASF54
     /tmp/cc1lSd5t.s:4317   .debug_str:0000000000000612 .LASF55
     /tmp/cc1lSd5t.s:4373   .debug_str:000000000000079c .LASF56
     /tmp/cc1lSd5t.s:4189   .debug_str:0000000000000266 .LASF162
     /tmp/cc1lSd5t.s:4417   .debug_str:00000000000009e5 .LASF57
     /tmp/cc1lSd5t.s:4357   .debug_str:0000000000000722 .LASF58
     /tmp/cc1lSd5t.s:4213   .debug_str:000000000000031a .LASF59
     /tmp/cc1lSd5t.s:4195   .debug_str:0000000000000297 .LASF60
     /tmp/cc1lSd5t.s:4371   .debug_str:000000000000078c .LASF61
     /tmp/cc1lSd5t.s:4239   .debug_str:00000000000003f8 .LASF62
     /tmp/cc1lSd5t.s:4241   .debug_str:0000000000000409 .LASF63
     /tmp/cc1lSd5t.s:4287   .debug_str:0000000000000563 .LASF64
     /tmp/cc1lSd5t.s:4397   .debug_str:0000000000000924 .LASF65
     /tmp/cc1lSd5t.s:4245   .debug_str:000000000000042e .LASF66
     /tmp/cc1lSd5t.s:4301   .debug_str:00000000000005ca .LASF67
     /tmp/cc1lSd5t.s:4307   .debug_str:00000000000005eb .LASF68
     /tmp/cc1lSd5t.s:4343   .debug_str:00000000000006dc .LASF69
     /tmp/cc1lSd5t.s:4249   .debug_str:000000000000043c .LASF70
     /tmp/cc1lSd5t.s:4261   .debug_str:000000000000048d .LASF163
     /tmp/cc1lSd5t.s:4223   .debug_str:000000000000037d .LASF164
     /tmp/cc1lSd5t.s:4413   .debug_str:00000000000009c3 .LASF120
     /tmp/cc1lSd5t.s:4401   .debug_str:000000000000094c .LASF122
     /tmp/cc1lSd5t.s:4365   .debug_str:0000000000000764 .LASF71
     /tmp/cc1lSd5t.s:4259   .debug_str:0000000000000482 .LASF72
     /tmp/cc1lSd5t.s:4227   .debug_str:00000000000003ae .LASF73
     /tmp/cc1lSd5t.s:4105   .debug_str:0000000000000000 .LASF74
     /tmp/cc1lSd5t.s:4315   .debug_str:000000000000060c .LASF75
     /tmp/cc1lSd5t.s:4255   .debug_str:000000000000045b .LASF79
     /tmp/cc1lSd5t.s:4375   .debug_str:00000000000007b0 .LASF76
     /tmp/cc1lSd5t.s:4313   .debug_str:0000000000000603 .LASF77
     /tmp/cc1lSd5t.s:4247   .debug_str:0000000000000433 .LASF78
     /tmp/cc1lSd5t.s:4171   .debug_str:00000000000001d4 .LASF80
     /tmp/cc1lSd5t.s:4163   .debug_str:0000000000000194 .LASF81
     /tmp/cc1lSd5t.s:4369   .debug_str:000000000000077f .LASF82
GAS LISTING /tmp/cc1lSd5t.s 			page 35


     /tmp/cc1lSd5t.s:4137   .debug_str:00000000000000dc .LASF83
     /tmp/cc1lSd5t.s:4351   .debug_str:00000000000006fb .LASF84
     /tmp/cc1lSd5t.s:4427   .debug_str:0000000000000a34 .LASF85
     /tmp/cc1lSd5t.s:4129   .debug_str:0000000000000097 .LASF86
     /tmp/cc1lSd5t.s:4187   .debug_str:000000000000024b .LASF87
     /tmp/cc1lSd5t.s:4201   .debug_str:00000000000002b9 .LASF88
     /tmp/cc1lSd5t.s:4109   .debug_str:0000000000000024 .LASF89
     /tmp/cc1lSd5t.s:4113   .debug_str:000000000000004e .LASF90
     /tmp/cc1lSd5t.s:4191   .debug_str:000000000000026e .LASF91
     /tmp/cc1lSd5t.s:4183   .debug_str:0000000000000236 .LASF92
     /tmp/cc1lSd5t.s:4181   .debug_str:0000000000000221 .LASF93
     /tmp/cc1lSd5t.s:4277   .debug_str:000000000000051f .LASF94
     /tmp/cc1lSd5t.s:4341   .debug_str:00000000000006c9 .LASF95
     /tmp/cc1lSd5t.s:4391   .debug_str:000000000000084d .LASF96
     /tmp/cc1lSd5t.s:4405   .debug_str:0000000000000981 .LASF97
     /tmp/cc1lSd5t.s:4207   .debug_str:00000000000002ee .LASF98
     /tmp/cc1lSd5t.s:4169   .debug_str:00000000000001c0 .LASF99
     /tmp/cc1lSd5t.s:4359   .debug_str:0000000000000732 .LASF100
     /tmp/cc1lSd5t.s:4225   .debug_str:000000000000039a .LASF101
     /tmp/cc1lSd5t.s:4233   .debug_str:00000000000003e1 .LASF102
     /tmp/cc1lSd5t.s:4415   .debug_str:00000000000009d1 .LASF103
     /tmp/cc1lSd5t.s:4141   .debug_str:00000000000000f8 .LASF104
     /tmp/cc1lSd5t.s:4193   .debug_str:0000000000000283 .LASF105
     /tmp/cc1lSd5t.s:4295   .debug_str:000000000000059f .LASF106
     /tmp/cc1lSd5t.s:4127   .debug_str:0000000000000084 .LASF107
     /tmp/cc1lSd5t.s:4125   .debug_str:000000000000007d .LASF108
     /tmp/cc1lSd5t.s:4205   .debug_str:00000000000002db .LASF109
     /tmp/cc1lSd5t.s:4281   .debug_str:000000000000054b .LASF110
     /tmp/cc1lSd5t.s:4389   .debug_str:000000000000083b .LASF111
     /tmp/cc1lSd5t.s:4123   .debug_str:0000000000000077 .LASF112
     /tmp/cc1lSd5t.s:4437   .debug_str:0000000000000a8d .LASF113
     /tmp/cc1lSd5t.s:4289   .debug_str:0000000000000574 .LASF114
     /tmp/cc1lSd5t.s:4361   .debug_str:000000000000073a .LASF115
     /tmp/cc1lSd5t.s:4173   .debug_str:00000000000001e3 .LASF116
     /tmp/cc1lSd5t.s:4263   .debug_str:000000000000049b .LASF117
     /tmp/cc1lSd5t.s:4147   .debug_str:0000000000000135 .LASF118
     /tmp/cc1lSd5t.s:4231   .debug_str:00000000000003cb .LASF119
     /tmp/cc1lSd5t.s:4197   .debug_str:00000000000002a7 .LASF121
     /tmp/cc1lSd5t.s:4221   .debug_str:0000000000000367 .LASF123
     /tmp/cc1lSd5t.s:4119   .debug_str:0000000000000066 .LASF124
     /tmp/cc1lSd5t.s:4253   .debug_str:0000000000000451 .LASF165
     /tmp/cc1lSd5t.s:4165   .debug_str:00000000000001a0 .LASF125
     /tmp/cc1lSd5t.s:4349   .debug_str:00000000000006f2 .LASF126
     /tmp/cc1lSd5t.s:4303   .debug_str:00000000000005d0 .LASF127
     /tmp/cc1lSd5t.s:4429   .debug_str:0000000000000a4c .LASF128
     /tmp/cc1lSd5t.s:4153   .debug_str:0000000000000150 .LASF129
     /tmp/cc1lSd5t.s:4329   .debug_str:000000000000066a .LASF130
     /tmp/cc1lSd5t.s:4339   .debug_str:00000000000006bc .LASF131
     /tmp/cc1lSd5t.s:4305   .debug_str:00000000000005de .LASF132
     /tmp/cc1lSd5t.s:4265   .debug_str:00000000000004b3 .LASF133
     /tmp/cc1lSd5t.s:897    .text:00000000000003f0 .LFB46
     /tmp/cc1lSd5t.s:926    .text:0000000000000420 .LFE46
     /tmp/cc1lSd5t.s:4379   .debug_str:00000000000007da .LASF136
     /tmp/cc1lSd5t.s:3626   .debug_loc:0000000000000000 .LLST31
     /tmp/cc1lSd5t.s:915    .text:0000000000000410 .LVL86
     /tmp/cc1lSd5t.s:4431   .debug_str:0000000000000a58 .LASF134
     /tmp/cc1lSd5t.s:4383   .debug_str:00000000000007e6 .LASF135
GAS LISTING /tmp/cc1lSd5t.s 			page 36


     /tmp/cc1lSd5t.s:823    .text:000000000000037c .LFB45
     /tmp/cc1lSd5t.s:891    .text:00000000000003f0 .LFE45
     /tmp/cc1lSd5t.s:3644   .debug_loc:000000000000004c .LLST27
     /tmp/cc1lSd5t.s:4209   .debug_str:00000000000002f6 .LASF137
     /tmp/cc1lSd5t.s:3662   .debug_loc:0000000000000098 .LLST28
     /tmp/cc1lSd5t.s:3680   .debug_loc:00000000000000e4 .LLST29
     /tmp/cc1lSd5t.s:3698   .debug_loc:0000000000000130 .LLST30
     /tmp/cc1lSd5t.s:849    .text:00000000000003b0 .LVL77
     /tmp/cc1lSd5t.s:861    .text:00000000000003d0 .LVL79
     /tmp/cc1lSd5t.s:4155   .debug_str:0000000000000160 .LASF138
     /tmp/cc1lSd5t.s:4203   .debug_str:00000000000002c6 .LASF139
     /tmp/cc1lSd5t.s:791    .text:0000000000000350 .LFB44
     /tmp/cc1lSd5t.s:817    .text:000000000000037c .LFE44
     /tmp/cc1lSd5t.s:806    .text:000000000000036c .LVL74
     /tmp/cc1lSd5t.s:4219   .debug_str:0000000000000359 .LASF140
     /tmp/cc1lSd5t.s:4145   .debug_str:0000000000000110 .LASF142
     /tmp/cc1lSd5t.s:691    .text:00000000000002ac .LFB43
     /tmp/cc1lSd5t.s:785    .text:0000000000000350 .LFE43
     /tmp/cc1lSd5t.s:3709   .debug_loc:0000000000000166 .LLST23
     /tmp/cc1lSd5t.s:3731   .debug_loc:00000000000001c5 .LLST24
     /tmp/cc1lSd5t.s:3753   .debug_loc:0000000000000224 .LLST25
     /tmp/cc1lSd5t.s:3775   .debug_loc:0000000000000283 .LLST26
     /tmp/cc1lSd5t.s:717    .text:00000000000002e0 .LVL64
     /tmp/cc1lSd5t.s:729    .text:0000000000000300 .LVL66
     /tmp/cc1lSd5t.s:4121   .debug_str:000000000000006b .LASF141
     /tmp/cc1lSd5t.s:4321   .debug_str:000000000000062b .LASF143
     /tmp/cc1lSd5t.s:647    .text:0000000000000278 .LFB42
     /tmp/cc1lSd5t.s:685    .text:00000000000002ac .LFE42
     /tmp/cc1lSd5t.s:3790   .debug_loc:00000000000002cc .LLST22
     /tmp/cc1lSd5t.s:662    .text:0000000000000294 .LVL59
     /tmp/cc1lSd5t.s:4425   .debug_str:0000000000000a26 .LASF144
     /tmp/cc1lSd5t.s:600    .text:0000000000000240 .LFB41
     /tmp/cc1lSd5t.s:641    .text:0000000000000278 .LFE41
     /tmp/cc1lSd5t.s:3797   .debug_loc:00000000000002ef .LLST20
     /tmp/cc1lSd5t.s:3815   .debug_loc:000000000000033b .LLST21
     /tmp/cc1lSd5t.s:618    .text:0000000000000260 .LVL56
     /tmp/cc1lSd5t.s:4161   .debug_str:0000000000000186 .LASF145
     /tmp/cc1lSd5t.s:541    .text:00000000000001f8 .LFB40
     /tmp/cc1lSd5t.s:594    .text:0000000000000240 .LFE40
     /tmp/cc1lSd5t.s:3822   .debug_loc:000000000000035e .LLST17
     /tmp/cc1lSd5t.s:4131   .debug_str:00000000000000a5 .LASF146
     /tmp/cc1lSd5t.s:3842   .debug_loc:00000000000003ac .LLST18
     /tmp/cc1lSd5t.s:3858   .debug_loc:00000000000003e7 .LLST19
     /tmp/cc1lSd5t.s:573    .text:000000000000022c .LVL52
     /tmp/cc1lSd5t.s:4185   .debug_str:000000000000023f .LASF147
     /tmp/cc1lSd5t.s:49     .text:0000000000000038 .LFB39
     /tmp/cc1lSd5t.s:535    .text:00000000000001f8 .LFE39
     /tmp/cc1lSd5t.s:4115   .debug_str:0000000000000057 .LASF148
     /tmp/cc1lSd5t.s:3870   .debug_loc:000000000000041e .LLST0
     /tmp/cc1lSd5t.s:4095   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc1lSd5t.s:4411   .debug_str:00000000000009be .LASF149
     /tmp/cc1lSd5t.s:4311   .debug_str:00000000000005fc .LASF150
     /tmp/cc1lSd5t.s:4309   .debug_str:00000000000005f5 .LASF151
     /tmp/cc1lSd5t.s:3933   .debug_loc:000000000000050f .LLST1
     /tmp/cc1lSd5t.s:189    .text:00000000000000d8 .LBB30
     /tmp/cc1lSd5t.s:222    .text:00000000000000f8 .LBE30
     /tmp/cc1lSd5t.s:3940   .debug_loc:0000000000000532 .LLST2
GAS LISTING /tmp/cc1lSd5t.s 			page 37


     /tmp/cc1lSd5t.s:3947   .debug_loc:0000000000000555 .LLST3
     /tmp/cc1lSd5t.s:202    .text:00000000000000e4 .LVL8
     /tmp/cc1lSd5t.s:206    .text:00000000000000f0 .LVL9
     /tmp/cc1lSd5t.s:279    .text:000000000000011c .LBB31
     /tmp/cc1lSd5t.s:297    .text:000000000000012c .LBE31
     /tmp/cc1lSd5t.s:3954   .debug_loc:0000000000000578 .LLST4
     /tmp/cc1lSd5t.s:292    .text:0000000000000128 .LVL17
     /tmp/cc1lSd5t.s:300    .text:000000000000012c .LBB32
     /tmp/cc1lSd5t.s:373    .text:0000000000000170 .LBE32
     /tmp/cc1lSd5t.s:3961   .debug_loc:000000000000059b .LLST5
     /tmp/cc1lSd5t.s:3973   .debug_loc:00000000000005d2 .LLST6
     /tmp/cc1lSd5t.s:3980   .debug_loc:00000000000005f5 .LLST7
     /tmp/cc1lSd5t.s:3987   .debug_loc:0000000000000618 .LLST8
     /tmp/cc1lSd5t.s:343    .text:000000000000014c .LVL23
     /tmp/cc1lSd5t.s:349    .text:0000000000000158 .LVL24
     /tmp/cc1lSd5t.s:396    .text:0000000000000188 .LBB33
     /tmp/cc1lSd5t.s:466    .text:00000000000001c4 .LBE33
     /tmp/cc1lSd5t.s:4004   .debug_loc:0000000000000663 .LLST9
     /tmp/cc1lSd5t.s:4016   .debug_loc:000000000000069a .LLST10
     /tmp/cc1lSd5t.s:4023   .debug_loc:00000000000006bd .LLST11
     /tmp/cc1lSd5t.s:4030   .debug_loc:00000000000006e0 .LLST12
     /tmp/cc1lSd5t.s:439    .text:00000000000001a8 .LVL36
     /tmp/cc1lSd5t.s:469    .text:00000000000001c4 .LBB34
     /tmp/cc1lSd5t.s:487    .text:00000000000001d4 .LBE34
     /tmp/cc1lSd5t.s:4047   .debug_loc:000000000000072b .LLST13
     /tmp/cc1lSd5t.s:482    .text:00000000000001d0 .LVL42
     /tmp/cc1lSd5t.s:120    .text:00000000000000a0 .LBB27
     /tmp/cc1lSd5t.s:135    .text:00000000000000ac .LBE27
     /tmp/cc1lSd5t.s:499    .text:00000000000001e0 .LBB35
     /tmp/cc1lSd5t.s:511    .text:00000000000001e8 .LBE35
     /tmp/cc1lSd5t.s:4059   .debug_loc:0000000000000762 .LLST14
     /tmp/cc1lSd5t.s:228    .text:00000000000000fc .LBB37
     /tmp/cc1lSd5t.s:239    .text:0000000000000100 .LBE37
     /tmp/cc1lSd5t.s:4068   .debug_loc:0000000000000788 .LLST15
     /tmp/cc1lSd5t.s:244    .text:0000000000000104 .LBB39
     /tmp/cc1lSd5t.s:256    .text:0000000000000108 .LBE39
     /tmp/cc1lSd5t.s:4075   .debug_loc:00000000000007ab .LLST16
     /tmp/cc1lSd5t.s:379    .text:0000000000000178 .LVL28
     /tmp/cc1lSd5t.s:389    .text:0000000000000184 .LVL30
     /tmp/cc1lSd5t.s:63     .text:000000000000004c .LBB23
     /tmp/cc1lSd5t.s:77     .text:0000000000000050 .LBE23
     /tmp/cc1lSd5t.s:519    .text:00000000000001ec .LBB43
     /tmp/cc1lSd5t.s:532    .text:00000000000001f8 .LBE43
     /tmp/cc1lSd5t.s:98     .text:0000000000000084 .LVL2
     /tmp/cc1lSd5t.s:4159   .debug_str:000000000000017a .LASF152
     /tmp/cc1lSd5t.s:4229   .debug_str:00000000000003b9 .LASF153
     /tmp/cc1lSd5t.s:10     .text:0000000000000000 .LFB38
     /tmp/cc1lSd5t.s:43     .text:0000000000000038 .LFE38
     /tmp/cc1lSd5t.s:4157   .debug_str:0000000000000170 .LASF154
     /tmp/cc1lSd5t.s:4345   .debug_str:00000000000006e5 .LASF155
     /tmp/cc1lSd5t.s:4151   .debug_str:000000000000014b .LASF156
     /tmp/cc1lSd5t.s:4177   .debug_str:00000000000001f8 .LASF166
     /tmp/cc1lSd5t.s:900    .text:00000000000003f0 .LVL84
     /tmp/cc1lSd5t.s:913    .text:0000000000000408 .LVL85
     /tmp/cc1lSd5t.s:826    .text:000000000000037c .LVL75
     /tmp/cc1lSd5t.s:847    .text:00000000000003a8 .LVL76
     /tmp/cc1lSd5t.s:880    .text:00000000000003e0 .LVL81
GAS LISTING /tmp/cc1lSd5t.s 			page 38


     /tmp/cc1lSd5t.s:883    .text:00000000000003e4 .LVL82
     /tmp/cc1lSd5t.s:886    .text:00000000000003e8 .LVL83
     /tmp/cc1lSd5t.s:859    .text:00000000000003c8 .LVL78
     /tmp/cc1lSd5t.s:694    .text:00000000000002ac .LVL62
     /tmp/cc1lSd5t.s:715    .text:00000000000002d8 .LVL63
     /tmp/cc1lSd5t.s:758    .text:0000000000000324 .LVL68
     /tmp/cc1lSd5t.s:768    .text:0000000000000334 .LVL71
     /tmp/cc1lSd5t.s:761    .text:0000000000000328 .LVL69
     /tmp/cc1lSd5t.s:764    .text:000000000000032c .LVL70
     /tmp/cc1lSd5t.s:727    .text:00000000000002f8 .LVL65
     /tmp/cc1lSd5t.s:778    .text:0000000000000348 .LVL72
     /tmp/cc1lSd5t.s:782    .text:000000000000034c .LVL73
     /tmp/cc1lSd5t.s:670    .text:0000000000000298 .LVL60
     /tmp/cc1lSd5t.s:675    .text:000000000000029c .LVL61
     /tmp/cc1lSd5t.s:603    .text:0000000000000240 .LVL54
     /tmp/cc1lSd5t.s:616    .text:0000000000000258 .LVL55
     /tmp/cc1lSd5t.s:626    .text:0000000000000264 .LVL57
     /tmp/cc1lSd5t.s:631    .text:0000000000000268 .LVL58
     /tmp/cc1lSd5t.s:544    .text:00000000000001f8 .LVL47
     /tmp/cc1lSd5t.s:556    .text:000000000000020c .LVL48
     /tmp/cc1lSd5t.s:561    .text:0000000000000214 .LVL49
     /tmp/cc1lSd5t.s:566    .text:000000000000021c .LVL50
     /tmp/cc1lSd5t.s:570    .text:0000000000000220 .LVL51
     /tmp/cc1lSd5t.s:581    .text:0000000000000230 .LVL53
     /tmp/cc1lSd5t.s:73     .text:0000000000000050 .LVL1
     /tmp/cc1lSd5t.s:100    .text:0000000000000088 .LVL3
     /tmp/cc1lSd5t.s:149    .text:00000000000000b8 .LVL5
     /tmp/cc1lSd5t.s:271    .text:000000000000011c .LVL15
     /tmp/cc1lSd5t.s:295    .text:000000000000012c .LVL18
     /tmp/cc1lSd5t.s:371    .text:0000000000000170 .LVL27
     /tmp/cc1lSd5t.s:382    .text:000000000000017c .LVL29
     /tmp/cc1lSd5t.s:392    .text:0000000000000188 .LVL31
     /tmp/cc1lSd5t.s:464    .text:00000000000001c4 .LVL40
     /tmp/cc1lSd5t.s:485    .text:00000000000001d4 .LVL43
     /tmp/cc1lSd5t.s:514    .text:00000000000001ec .LVL46
     /tmp/cc1lSd5t.s:145    .text:00000000000000b4 .LVL4
     /tmp/cc1lSd5t.s:152    .text:00000000000000c0 .LVL6
     /tmp/cc1lSd5t.s:197    .text:00000000000000dc .LVL7
     /tmp/cc1lSd5t.s:219    .text:00000000000000f8 .LVL10
     /tmp/cc1lSd5t.s:287    .text:0000000000000120 .LVL16
     /tmp/cc1lSd5t.s:318    .text:0000000000000138 .LVL19
     /tmp/cc1lSd5t.s:324    .text:000000000000013c .LVL20
     /tmp/cc1lSd5t.s:331    .text:0000000000000140 .LVL21
     /tmp/cc1lSd5t.s:338    .text:0000000000000144 .LVL22
     /tmp/cc1lSd5t.s:356    .text:0000000000000160 .LVL25
     /tmp/cc1lSd5t.s:366    .text:0000000000000168 .LVL26
     /tmp/cc1lSd5t.s:414    .text:0000000000000194 .LVL32
     /tmp/cc1lSd5t.s:420    .text:0000000000000198 .LVL33
     /tmp/cc1lSd5t.s:427    .text:000000000000019c .LVL34
     /tmp/cc1lSd5t.s:434    .text:00000000000001a0 .LVL35
     /tmp/cc1lSd5t.s:443    .text:00000000000001ac .LVL37
     /tmp/cc1lSd5t.s:449    .text:00000000000001b4 .LVL38
     /tmp/cc1lSd5t.s:459    .text:00000000000001bc .LVL39
     /tmp/cc1lSd5t.s:477    .text:00000000000001c8 .LVL41
     /tmp/cc1lSd5t.s:497    .text:00000000000001e0 .LVL44
     /tmp/cc1lSd5t.s:508    .text:00000000000001e8 .LVL45
     /tmp/cc1lSd5t.s:227    .text:00000000000000fc .LVL11
GAS LISTING /tmp/cc1lSd5t.s 			page 39


     /tmp/cc1lSd5t.s:236    .text:0000000000000100 .LVL12
     /tmp/cc1lSd5t.s:243    .text:0000000000000104 .LVL13
     /tmp/cc1lSd5t.s:252    .text:0000000000000108 .LVL14
     /tmp/cc1lSd5t.s:935    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc1lSd5t.s:102    .text:0000000000000088 .LBB26
     /tmp/cc1lSd5t.s:257    .text:0000000000000108 .LBE26
     /tmp/cc1lSd5t.s:275    .text:000000000000011c .LBB42
     /tmp/cc1lSd5t.s:517    .text:00000000000001ec .LBE42

UNDEFINED SYMBOLS
console_handler
_ZN15MemoryAllocator11getInstanceEv
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN7_thread12createThreadEPFvPvES0_
_ZN7_thread5startEv
_ZN7_thread10threadExitEv
_ZN7_thread8dispatchEv
_Z8userMainPv
_ZN7_thread7runningE
