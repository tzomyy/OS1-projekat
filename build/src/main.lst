GAS LISTING /tmp/ccLjD7Lu.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z12checkNullptrPv
   9              	_Z12checkNullptrPv:
  10              	.LFB38:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** 
   2:src/main.cpp  **** #include "../lib/hw.h"
   3:src/main.cpp  **** #include "../lib/console.h"
   4:src/main.cpp  **** #include "../h/MemoryAllocator.h"
   5:src/main.cpp  **** #include "../h/syscall_c.h"
   6:src/main.cpp  **** #include "../h/riscv.h"
   7:src/main.cpp  **** #include "../h/_thread.h"
   8:src/main.cpp  **** 
   9:src/main.cpp  **** 
  10:src/main.cpp  **** //uint64  timerCount = 0;
  11:src/main.cpp  **** //
  12:src/main.cpp  **** //extern "C" void handleSupervisorTrap(){
  13:src/main.cpp  **** //    uint64 scause;
  14:src/main.cpp  **** //    __asm__ volatile("csrr %[scause], scause" : [scause] "=r" (scause) );
  15:src/main.cpp  **** //    if(scause == (0x01UL << 63 | 0x01)){
  16:src/main.cpp  **** //        timerCount++;
  17:src/main.cpp  **** //        if (timerCount >= 50){
  18:src/main.cpp  **** //            __putc('a');
  19:src/main.cpp  **** //            __putc('\n');
  20:src/main.cpp  **** //            timerCount = 0;
  21:src/main.cpp  **** //        }
  22:src/main.cpp  **** //        __asm__ volatile("csrc sip, 0x02");
  23:src/main.cpp  **** //    }
  24:src/main.cpp  **** //    console_handler();
  25:src/main.cpp  **** //}
  26:src/main.cpp  **** //extern "C" void supervisorTrap();
  27:src/main.cpp  **** 
  28:src/main.cpp  **** void checkNullptr(void* p) {
  12              		.loc 1 28 28
  13              		.cfi_startproc
  14              	.LVL0:
  29:src/main.cpp  ****     static int x = 0;
  15              		.loc 1 29 5
  30:src/main.cpp  ****     if(p == nullptr) {
  16              		.loc 1 30 5
  17 0000 630E0500 		beqz	a0,.L7
  31:src/main.cpp  ****         __putc('?');
  32:src/main.cpp  ****         __putc('0' + x);
  33:src/main.cpp  ****     }
  34:src/main.cpp  ****     x++;
  18              		.loc 1 34 5
  19              		.loc 1 34 6 is_stmt 0
  20 0004 17070000 		lla	a4,.LANCHOR0
  20      13070700 
  21 000c 83270700 		lw	a5,0(a4)
  22 0010 9B871700 		addiw	a5,a5,1
  23 0014 2320F700 		sw	a5,0(a4)
GAS LISTING /tmp/ccLjD7Lu.s 			page 2


  24 0018 67800000 		ret
  25              	.L7:
  28:src/main.cpp  ****     static int x = 0;
  26              		.loc 1 28 28
  27 001c 130101FF 		addi	sp,sp,-16
  28              		.cfi_def_cfa_offset 16
  29 0020 23341100 		sd	ra,8(sp)
  30 0024 23308100 		sd	s0,0(sp)
  31              		.cfi_offset 1, -8
  32              		.cfi_offset 8, -16
  33 0028 13040101 		addi	s0,sp,16
  34              		.cfi_def_cfa 8, 0
  31:src/main.cpp  ****         __putc('?');
  35              		.loc 1 31 9 is_stmt 1
  31:src/main.cpp  ****         __putc('?');
  36              		.loc 1 31 15 is_stmt 0
  37 002c 1305F003 		li	a0,63
  38              	.LVL1:
  39 0030 97000000 		call	__putc@plt
  39      E7800000 
  40              	.LVL2:
  32:src/main.cpp  ****     }
  41              		.loc 1 32 9 is_stmt 1
  32:src/main.cpp  ****     }
  42              		.loc 1 32 15 is_stmt 0
  43 0038 17050000 		lw	a0,.LANCHOR0
  43      03250500 
  44 0040 1B050503 		addiw	a0,a0,48
  45 0044 1375F50F 		andi	a0,a0,0xff
  46 0048 97000000 		call	__putc@plt
  46      E7800000 
  47              	.LVL3:
  48              		.loc 1 34 5 is_stmt 1
  49              		.loc 1 34 6 is_stmt 0
  50 0050 17070000 		lla	a4,.LANCHOR0
  50      13070700 
  51 0058 83270700 		lw	a5,0(a4)
  52 005c 9B871700 		addiw	a5,a5,1
  53 0060 2320F700 		sw	a5,0(a4)
  35:src/main.cpp  **** }
  54              		.loc 1 35 1
  55 0064 83308100 		ld	ra,8(sp)
  56              		.cfi_restore 1
  57 0068 03340100 		ld	s0,0(sp)
  58              		.cfi_restore 8
  59              		.cfi_def_cfa 2, 16
  60 006c 13010101 		addi	sp,sp,16
  61              		.cfi_def_cfa_offset 0
  62 0070 67800000 		jr	ra
  63              		.cfi_endproc
  64              	.LFE38:
  66              		.align	2
  67              		.globl	_Z11checkStatusi
  69              	_Z11checkStatusi:
  70              	.LFB39:
  36:src/main.cpp  **** 
  37:src/main.cpp  **** void checkStatus(int status) {
GAS LISTING /tmp/ccLjD7Lu.s 			page 3


  71              		.loc 1 37 30 is_stmt 1
  72              		.cfi_startproc
  73              	.LVL4:
  38:src/main.cpp  ****     static int y = 0;
  74              		.loc 1 38 5
  39:src/main.cpp  ****     if(status) {
  75              		.loc 1 39 5
  76 0074 631E0500 		bnez	a0,.L14
  40:src/main.cpp  ****         __putc('0' + y);
  41:src/main.cpp  ****         __putc('?');
  42:src/main.cpp  ****     }
  43:src/main.cpp  ****     y++;
  77              		.loc 1 43 5
  78              		.loc 1 43 6 is_stmt 0
  79 0078 17070000 		lla	a4,.LANCHOR0
  79      13070700 
  80 0080 83274700 		lw	a5,4(a4)
  81 0084 9B871700 		addiw	a5,a5,1
  82 0088 2322F700 		sw	a5,4(a4)
  83 008c 67800000 		ret
  84              	.L14:
  37:src/main.cpp  ****     static int y = 0;
  85              		.loc 1 37 30
  86 0090 130101FF 		addi	sp,sp,-16
  87              		.cfi_def_cfa_offset 16
  88 0094 23341100 		sd	ra,8(sp)
  89 0098 23308100 		sd	s0,0(sp)
  90              		.cfi_offset 1, -8
  91              		.cfi_offset 8, -16
  92 009c 13040101 		addi	s0,sp,16
  93              		.cfi_def_cfa 8, 0
  40:src/main.cpp  ****         __putc('0' + y);
  94              		.loc 1 40 9 is_stmt 1
  40:src/main.cpp  ****         __putc('0' + y);
  95              		.loc 1 40 15 is_stmt 0
  96 00a0 17050000 		lw	a0,.LANCHOR0+4
  96      03250500 
  97              	.LVL5:
  98 00a8 1B050503 		addiw	a0,a0,48
  99 00ac 1375F50F 		andi	a0,a0,0xff
 100 00b0 97000000 		call	__putc@plt
 100      E7800000 
 101              	.LVL6:
  41:src/main.cpp  ****     }
 102              		.loc 1 41 9 is_stmt 1
  41:src/main.cpp  ****     }
 103              		.loc 1 41 15 is_stmt 0
 104 00b8 1305F003 		li	a0,63
 105 00bc 97000000 		call	__putc@plt
 105      E7800000 
 106              	.LVL7:
 107              		.loc 1 43 5 is_stmt 1
 108              		.loc 1 43 6 is_stmt 0
 109 00c4 17070000 		lla	a4,.LANCHOR0
 109      13070700 
 110 00cc 83274700 		lw	a5,4(a4)
 111 00d0 9B871700 		addiw	a5,a5,1
GAS LISTING /tmp/ccLjD7Lu.s 			page 4


 112 00d4 2322F700 		sw	a5,4(a4)
  44:src/main.cpp  **** }
 113              		.loc 1 44 1
 114 00d8 83308100 		ld	ra,8(sp)
 115              		.cfi_restore 1
 116 00dc 03340100 		ld	s0,0(sp)
 117              		.cfi_restore 8
 118              		.cfi_def_cfa 2, 16
 119 00e0 13010101 		addi	sp,sp,16
 120              		.cfi_def_cfa_offset 0
 121 00e4 67800000 		jr	ra
 122              		.cfi_endproc
 123              	.LFE39:
 125              		.align	2
 126              		.globl	main
 128              	main:
 129              	.LFB40:
  45:src/main.cpp  **** extern "C" void trap();
  46:src/main.cpp  **** void userMain(void *);
  47:src/main.cpp  **** 
  48:src/main.cpp  **** int main(){
 130              		.loc 1 48 11 is_stmt 1
 131              		.cfi_startproc
 132 00e8 130101FE 		addi	sp,sp,-32
 133              		.cfi_def_cfa_offset 32
 134 00ec 233C1100 		sd	ra,24(sp)
 135 00f0 23388100 		sd	s0,16(sp)
 136 00f4 23349100 		sd	s1,8(sp)
 137              		.cfi_offset 1, -8
 138              		.cfi_offset 8, -16
 139              		.cfi_offset 9, -24
 140 00f8 13040102 		addi	s0,sp,32
 141              		.cfi_def_cfa 8, 0
  49:src/main.cpp  **** 
  50:src/main.cpp  ****     /*MemoryAllocator::getInstance();
  51:src/main.cpp  ****     __putc('c');
  52:src/main.cpp  ****     thread_t thr[2];
  53:src/main.cpp  ****     thread_create(&thr[0], nullptr, nullptr);
  54:src/main.cpp  ****     thread_create(&thr[1], userMain, nullptr);*/
  55:src/main.cpp  **** 
  56:src/main.cpp  ****     //Riscv::w_stvec((uint64) &trap);
  57:src/main.cpp  ****     //Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  58:src/main.cpp  **** 
  59:src/main.cpp  ****     //_thread *threads[2];
  60:src/main.cpp  **** 
  61:src/main.cpp  ****     _thread *thread = _thread::createThread(nullptr, nullptr);
 142              		.loc 1 61 5
 143              		.loc 1 61 44 is_stmt 0
 144 00fc 93050000 		li	a1,0
 145 0100 13050000 		li	a0,0
 146 0104 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_@plt
 146      E7800000 
 147              	.LVL8:
 148 010c 93040500 		mv	s1,a0
 149              	.LVL9:
  62:src/main.cpp  ****     _thread::running = thread;
 150              		.loc 1 62 5 is_stmt 1
GAS LISTING /tmp/ccLjD7Lu.s 			page 5


 151              		.loc 1 62 22 is_stmt 0
 152 0110 97070000 		la	a5,_ZN7_thread7runningE
 152      83B70700 
 153 0118 23B0A700 		sd	a0,0(a5)
  63:src/main.cpp  **** 
  64:src/main.cpp  ****     //threads[1] = _thread::createThread(userMain, nullptr);
  65:src/main.cpp  **** 
  66:src/main.cpp  ****     Riscv::w_stvec((uint64) &trap);
 154              		.loc 1 66 5 is_stmt 1
 155              		.loc 1 66 19 is_stmt 0
 156 011c 97070000 		la	a5,trap
 156      83B70700 
 157              	.LVL10:
 158              	.LBB6:
 159              	.LBB7:
 160              		.file 2 "src/../h/riscv.h"
   1:src/../h/riscv.h **** //
   2:src/../h/riscv.h **** // Created by os on 6/21/22.
   3:src/../h/riscv.h **** //
   4:src/../h/riscv.h **** 
   5:src/../h/riscv.h **** #ifndef OS_PROJEKAT_RISCV_H
   6:src/../h/riscv.h **** #define OS_PROJEKAT_RISCV_H
   7:src/../h/riscv.h **** 
   8:src/../h/riscv.h **** 
   9:src/../h/riscv.h **** 
  10:src/../h/riscv.h **** #include "../lib/hw.h"
  11:src/../h/riscv.h **** 
  12:src/../h/riscv.h **** class Riscv
  13:src/../h/riscv.h **** {
  14:src/../h/riscv.h **** public:
  15:src/../h/riscv.h **** 
  16:src/../h/riscv.h ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  17:src/../h/riscv.h ****     static void popSppSpie();
  18:src/../h/riscv.h **** 
  19:src/../h/riscv.h ****     // push x3..x31 registers onto stack
  20:src/../h/riscv.h ****     static void pushRegisters();
  21:src/../h/riscv.h **** 
  22:src/../h/riscv.h ****     // pop x3..x31 registers onto stack
  23:src/../h/riscv.h ****     static void popRegisters();
  24:src/../h/riscv.h **** 
  25:src/../h/riscv.h ****     // read register scause
  26:src/../h/riscv.h ****     static uint64 r_scause();
  27:src/../h/riscv.h **** 
  28:src/../h/riscv.h ****     // write register scause
  29:src/../h/riscv.h ****     static void w_scause(uint64 scause);
  30:src/../h/riscv.h **** 
  31:src/../h/riscv.h ****     // read register sepc
  32:src/../h/riscv.h ****     static uint64 r_sepc();
  33:src/../h/riscv.h **** 
  34:src/../h/riscv.h ****     // write register sepc
  35:src/../h/riscv.h ****     static void w_sepc(uint64 sepc);
  36:src/../h/riscv.h **** 
  37:src/../h/riscv.h ****     // read register stvec
  38:src/../h/riscv.h ****     static uint64 r_stvec();
  39:src/../h/riscv.h **** 
  40:src/../h/riscv.h ****     // write register stvec
  41:src/../h/riscv.h ****     static void w_stvec(uint64 stvec);
GAS LISTING /tmp/ccLjD7Lu.s 			page 6


  42:src/../h/riscv.h **** 
  43:src/../h/riscv.h ****     // read register stval
  44:src/../h/riscv.h ****     static uint64 r_stval();
  45:src/../h/riscv.h **** 
  46:src/../h/riscv.h ****     // write register stval
  47:src/../h/riscv.h ****     static void w_stval(uint64 stval);
  48:src/../h/riscv.h **** 
  49:src/../h/riscv.h ****     enum BitMaskSip
  50:src/../h/riscv.h ****     {
  51:src/../h/riscv.h ****         SIP_SSIP = (1 << 1),
  52:src/../h/riscv.h ****         SIP_STIP = (1 << 5),
  53:src/../h/riscv.h ****         SIP_SEIP = (1 << 9),
  54:src/../h/riscv.h ****     };
  55:src/../h/riscv.h **** 
  56:src/../h/riscv.h ****     // mask set register sip
  57:src/../h/riscv.h ****     static void ms_sip(uint64 mask);
  58:src/../h/riscv.h **** 
  59:src/../h/riscv.h ****     // mask clear register sip
  60:src/../h/riscv.h ****     static void mc_sip(uint64 mask);
  61:src/../h/riscv.h **** 
  62:src/../h/riscv.h ****     // read register sip
  63:src/../h/riscv.h ****     static uint64 r_sip();
  64:src/../h/riscv.h **** 
  65:src/../h/riscv.h ****     // write register sip
  66:src/../h/riscv.h ****     static void w_sip(uint64 sip);
  67:src/../h/riscv.h **** 
  68:src/../h/riscv.h ****     enum BitMaskSstatus
  69:src/../h/riscv.h ****     {
  70:src/../h/riscv.h ****         SSTATUS_SIE = (1 << 1),
  71:src/../h/riscv.h ****         SSTATUS_SPIE = (1 << 5),
  72:src/../h/riscv.h ****         SSTATUS_SPP = (1 << 8),
  73:src/../h/riscv.h ****     };
  74:src/../h/riscv.h **** 
  75:src/../h/riscv.h ****     // mask set register sstatus
  76:src/../h/riscv.h ****     static void ms_sstatus(uint64 mask);
  77:src/../h/riscv.h **** 
  78:src/../h/riscv.h ****     // mask clear register sstatus
  79:src/../h/riscv.h ****     static void mc_sstatus(uint64 mask);
  80:src/../h/riscv.h **** 
  81:src/../h/riscv.h ****     // read register sstatus
  82:src/../h/riscv.h ****     static uint64 r_sstatus();
  83:src/../h/riscv.h **** 
  84:src/../h/riscv.h ****     // write register sstatus
  85:src/../h/riscv.h ****     static void w_sstatus(uint64 sstatus);
  86:src/../h/riscv.h **** 
  87:src/../h/riscv.h ****     // supervisor trap
  88:src/../h/riscv.h ****     //static void supervisorTrap();
  89:src/../h/riscv.h **** 
  90:src/../h/riscv.h **** private:
  91:src/../h/riscv.h **** 
  92:src/../h/riscv.h ****     // supervisor trap handler
  93:src/../h/riscv.h ****     //static void handleSupervisorTrap();
  94:src/../h/riscv.h **** 
  95:src/../h/riscv.h **** };
  96:src/../h/riscv.h **** 
  97:src/../h/riscv.h **** inline uint64 Riscv::r_scause()
  98:src/../h/riscv.h **** {
GAS LISTING /tmp/ccLjD7Lu.s 			page 7


  99:src/../h/riscv.h ****     uint64 scause;
 100:src/../h/riscv.h ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 101:src/../h/riscv.h ****     return scause;
 102:src/../h/riscv.h **** }
 103:src/../h/riscv.h **** 
 104:src/../h/riscv.h **** inline void Riscv::w_scause(uint64 scause)
 105:src/../h/riscv.h **** {
 106:src/../h/riscv.h ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 107:src/../h/riscv.h **** }
 108:src/../h/riscv.h **** 
 109:src/../h/riscv.h **** inline uint64 Riscv::r_sepc()
 110:src/../h/riscv.h **** {
 111:src/../h/riscv.h ****     uint64 volatile sepc;
 112:src/../h/riscv.h ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 113:src/../h/riscv.h ****     return sepc;
 114:src/../h/riscv.h **** }
 115:src/../h/riscv.h **** 
 116:src/../h/riscv.h **** inline void Riscv::w_sepc(uint64 sepc)
 117:src/../h/riscv.h **** {
 118:src/../h/riscv.h ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 119:src/../h/riscv.h **** }
 120:src/../h/riscv.h **** 
 121:src/../h/riscv.h **** inline uint64 Riscv::r_stvec()
 122:src/../h/riscv.h **** {
 123:src/../h/riscv.h ****     uint64 volatile stvec;
 124:src/../h/riscv.h ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 125:src/../h/riscv.h ****     return stvec;
 126:src/../h/riscv.h **** }
 127:src/../h/riscv.h **** 
 128:src/../h/riscv.h **** inline void Riscv::w_stvec(uint64 stvec)
 129:src/../h/riscv.h **** {
 130:src/../h/riscv.h ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 161              		.loc 2 130 5 is_stmt 1
 162              		.loc 2 130 69 is_stmt 0
 163              	#APP
 164              	# 130 "src/../h/riscv.h" 1
 131              	}
 165              		csrw stvec, a5
 166              	# 0 "" 2
 167              	.LVL11:
 168              	#NO_APP
 169              	.LBE7:
 170              	.LBE6:
  67:src/main.cpp  ****     __asm__ volatile("ecall");
 171              		.loc 1 67 5 is_stmt 1
 172              		.loc 1 67 30 is_stmt 0
 173              	#APP
 174              	# 67 "src/main.cpp" 1
  68              	
 175              		ecall
 176              	# 0 "" 2
 177              	#NO_APP
 178              	.L17:
  69:src/main.cpp  ****     //Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  70:src/main.cpp  **** 
  71:src/main.cpp  **** 
  72:src/main.cpp  ****     while (!(thread->isFinished()))
GAS LISTING /tmp/ccLjD7Lu.s 			page 8


 179              		.loc 1 72 5 is_stmt 1
 180              		.loc 1 72 12
 181              	.LVL12:
 182              	.LBB8:
 183              	.LBB9:
 184              		.file 3 "src/../h/_thread.h"
   1:src/../h/_thread.h **** //
   2:src/../h/_thread.h **** // Created by os on 6/21/22.
   3:src/../h/_thread.h **** //
   4:src/../h/_thread.h **** 
   5:src/../h/_thread.h **** #ifndef OS_PROJEKAT__THREAD_H
   6:src/../h/_thread.h **** #define OS_PROJEKAT__THREAD_H
   7:src/../h/_thread.h **** 
   8:src/../h/_thread.h **** //
   9:src/../h/_thread.h **** // Created by os on 6/17/22.
  10:src/../h/_thread.h **** //
  11:src/../h/_thread.h **** 
  12:src/../h/_thread.h **** #include "../lib/hw.h"
  13:src/../h/_thread.h **** #include "Scheduler.h"
  14:src/../h/_thread.h **** #include "riscv.h"
  15:src/../h/_thread.h **** #include "../h/syscall_cpp.h"
  16:src/../h/_thread.h **** 
  17:src/../h/_thread.h **** class _thread {
  18:src/../h/_thread.h **** public:
  19:src/../h/_thread.h ****     ~_thread() { MemoryAllocator::mem_free((char*)stack-STACK_SIZE); }
  20:src/../h/_thread.h **** 
  21:src/../h/_thread.h ****     bool isFinished() const { return finished; }
 185              		.loc 3 21 31
 186              		.loc 3 21 38 is_stmt 0
 187 012c 83C78401 		lbu	a5,24(s1)
 188              	.LVL13:
 189              	.LBE9:
 190              	.LBE8:
 191              		.loc 1 72 12
 192 0130 63980700 		bnez	a5,.L16
  73:src/main.cpp  ****     {
  74:src/main.cpp  ****         _thread::yield();
 193              		.loc 1 74 9 is_stmt 1
 194              		.loc 1 74 23 is_stmt 0
 195 0134 97000000 		call	_ZN7_thread5yieldEv@plt
 195      E7800000 
 196              	.LVL14:
  72:src/main.cpp  ****     {
 197              		.loc 1 72 5
 198 013c 6FF01FFF 		j	.L17
 199              	.L16:
  75:src/main.cpp  ****     }
  76:src/main.cpp  ****     return 0;
 200              		.loc 1 76 5 is_stmt 1
  77:src/main.cpp  **** }
 201              		.loc 1 77 1 is_stmt 0
 202 0140 13050000 		li	a0,0
 203 0144 83308101 		ld	ra,24(sp)
 204              		.cfi_restore 1
 205 0148 03340101 		ld	s0,16(sp)
 206              		.cfi_restore 8
 207              		.cfi_def_cfa 2, 32
GAS LISTING /tmp/ccLjD7Lu.s 			page 9


 208 014c 83348100 		ld	s1,8(sp)
 209              		.cfi_restore 9
 210              	.LVL15:
 211 0150 13010102 		addi	sp,sp,32
 212              		.cfi_def_cfa_offset 0
 213 0154 67800000 		jr	ra
 214              		.cfi_endproc
 215              	.LFE40:
 217              		.bss
 218              		.align	2
 219              		.set	.LANCHOR0,. + 0
 222              	_ZZ12checkNullptrPvE1x:
 223 0000 00000000 		.zero	4
 226              	_ZZ11checkStatusiE1y:
 227 0004 00000000 		.zero	4
 228              		.text
 229              	.Letext0:
 230              		.file 4 "src/../lib/hw.h"
 231              		.file 5 "src/../lib/console.h"
GAS LISTING /tmp/ccLjD7Lu.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccLjD7Lu.s:9      .text:0000000000000000 _Z12checkNullptrPv
     /tmp/ccLjD7Lu.s:13     .text:0000000000000000 .L0 
     /tmp/ccLjD7Lu.s:15     .text:0000000000000000 .L0 
     /tmp/ccLjD7Lu.s:16     .text:0000000000000000 .L0 
     /tmp/ccLjD7Lu.s:17     .text:0000000000000000 .L0 
     /tmp/ccLjD7Lu.s:19     .text:0000000000000004 .L0 
     /tmp/ccLjD7Lu.s:20     .text:0000000000000004 .L0 
     /tmp/ccLjD7Lu.s:27     .text:000000000000001c .L0 
     /tmp/ccLjD7Lu.s:28     .text:0000000000000020 .L0 
     /tmp/ccLjD7Lu.s:31     .text:0000000000000028 .L0 
     /tmp/ccLjD7Lu.s:32     .text:0000000000000028 .L0 
     /tmp/ccLjD7Lu.s:34     .text:000000000000002c .L0 
     /tmp/ccLjD7Lu.s:36     .text:000000000000002c .L0 
     /tmp/ccLjD7Lu.s:37     .text:000000000000002c .L0 
     /tmp/ccLjD7Lu.s:42     .text:0000000000000038 .L0 
     /tmp/ccLjD7Lu.s:43     .text:0000000000000038 .L0 
     /tmp/ccLjD7Lu.s:49     .text:0000000000000050 .L0 
     /tmp/ccLjD7Lu.s:50     .text:0000000000000050 .L0 
     /tmp/ccLjD7Lu.s:55     .text:0000000000000064 .L0 
     /tmp/ccLjD7Lu.s:56     .text:0000000000000068 .L0 
     /tmp/ccLjD7Lu.s:58     .text:000000000000006c .L0 
     /tmp/ccLjD7Lu.s:59     .text:000000000000006c .L0 
     /tmp/ccLjD7Lu.s:61     .text:0000000000000070 .L0 
     /tmp/ccLjD7Lu.s:63     .text:0000000000000074 .L0 
     /tmp/ccLjD7Lu.s:69     .text:0000000000000074 _Z11checkStatusi
     /tmp/ccLjD7Lu.s:72     .text:0000000000000074 .L0 
     /tmp/ccLjD7Lu.s:74     .text:0000000000000074 .L0 
     /tmp/ccLjD7Lu.s:75     .text:0000000000000074 .L0 
     /tmp/ccLjD7Lu.s:76     .text:0000000000000074 .L0 
     /tmp/ccLjD7Lu.s:78     .text:0000000000000078 .L0 
     /tmp/ccLjD7Lu.s:79     .text:0000000000000078 .L0 
     /tmp/ccLjD7Lu.s:86     .text:0000000000000090 .L0 
     /tmp/ccLjD7Lu.s:87     .text:0000000000000094 .L0 
     /tmp/ccLjD7Lu.s:90     .text:000000000000009c .L0 
     /tmp/ccLjD7Lu.s:91     .text:000000000000009c .L0 
     /tmp/ccLjD7Lu.s:93     .text:00000000000000a0 .L0 
     /tmp/ccLjD7Lu.s:95     .text:00000000000000a0 .L0 
     /tmp/ccLjD7Lu.s:96     .text:00000000000000a0 .L0 
     /tmp/ccLjD7Lu.s:103    .text:00000000000000b8 .L0 
     /tmp/ccLjD7Lu.s:104    .text:00000000000000b8 .L0 
     /tmp/ccLjD7Lu.s:108    .text:00000000000000c4 .L0 
     /tmp/ccLjD7Lu.s:109    .text:00000000000000c4 .L0 
     /tmp/ccLjD7Lu.s:114    .text:00000000000000d8 .L0 
     /tmp/ccLjD7Lu.s:115    .text:00000000000000dc .L0 
     /tmp/ccLjD7Lu.s:117    .text:00000000000000e0 .L0 
     /tmp/ccLjD7Lu.s:118    .text:00000000000000e0 .L0 
     /tmp/ccLjD7Lu.s:120    .text:00000000000000e4 .L0 
     /tmp/ccLjD7Lu.s:122    .text:00000000000000e8 .L0 
     /tmp/ccLjD7Lu.s:128    .text:00000000000000e8 main
     /tmp/ccLjD7Lu.s:131    .text:00000000000000e8 .L0 
     /tmp/ccLjD7Lu.s:132    .text:00000000000000e8 .L0 
     /tmp/ccLjD7Lu.s:133    .text:00000000000000ec .L0 
     /tmp/ccLjD7Lu.s:137    .text:00000000000000f8 .L0 
     /tmp/ccLjD7Lu.s:138    .text:00000000000000f8 .L0 
     /tmp/ccLjD7Lu.s:139    .text:00000000000000f8 .L0 
GAS LISTING /tmp/ccLjD7Lu.s 			page 11


     /tmp/ccLjD7Lu.s:141    .text:00000000000000fc .L0 
     /tmp/ccLjD7Lu.s:143    .text:00000000000000fc .L0 
     /tmp/ccLjD7Lu.s:144    .text:00000000000000fc .L0 
     /tmp/ccLjD7Lu.s:151    .text:0000000000000110 .L0 
     /tmp/ccLjD7Lu.s:152    .text:0000000000000110 .L0 
     /tmp/ccLjD7Lu.s:155    .text:000000000000011c .L0 
     /tmp/ccLjD7Lu.s:156    .text:000000000000011c .L0 
     /tmp/ccLjD7Lu.s:162    .text:0000000000000124 .L0 
    src/../h/riscv.h:130    .text:0000000000000124 .L0 
     /tmp/ccLjD7Lu.s:172    .text:0000000000000128 .L0 
        src/main.cpp:67     .text:0000000000000128 .L0 
     /tmp/ccLjD7Lu.s:180    .text:000000000000012c .L0 
     /tmp/ccLjD7Lu.s:185    .text:000000000000012c .L0 
     /tmp/ccLjD7Lu.s:186    .text:000000000000012c .L0 
     /tmp/ccLjD7Lu.s:187    .text:000000000000012c .L0 
     /tmp/ccLjD7Lu.s:192    .text:0000000000000130 .L0 
     /tmp/ccLjD7Lu.s:194    .text:0000000000000134 .L0 
     /tmp/ccLjD7Lu.s:195    .text:0000000000000134 .L0 
     /tmp/ccLjD7Lu.s:198    .text:000000000000013c .L0 
     /tmp/ccLjD7Lu.s:201    .text:0000000000000140 .L0 
     /tmp/ccLjD7Lu.s:202    .text:0000000000000140 .L0 
     /tmp/ccLjD7Lu.s:204    .text:0000000000000148 .L0 
     /tmp/ccLjD7Lu.s:206    .text:000000000000014c .L0 
     /tmp/ccLjD7Lu.s:207    .text:000000000000014c .L0 
     /tmp/ccLjD7Lu.s:209    .text:0000000000000150 .L0 
     /tmp/ccLjD7Lu.s:212    .text:0000000000000154 .L0 
     /tmp/ccLjD7Lu.s:214    .text:0000000000000158 .L0 
     /tmp/ccLjD7Lu.s:219    .bss:0000000000000000 .LANCHOR0
     /tmp/ccLjD7Lu.s:222    .bss:0000000000000000 _ZZ12checkNullptrPvE1x
     /tmp/ccLjD7Lu.s:226    .bss:0000000000000004 _ZZ11checkStatusiE1y
     /tmp/ccLjD7Lu.s:232    .text:0000000000000158 .L0 
     /tmp/ccLjD7Lu.s:20     .text:0000000000000004 .L0 
     /tmp/ccLjD7Lu.s:43     .text:0000000000000038 .L0 
     /tmp/ccLjD7Lu.s:50     .text:0000000000000050 .L0 
     /tmp/ccLjD7Lu.s:79     .text:0000000000000078 .L0 
     /tmp/ccLjD7Lu.s:96     .text:00000000000000a0 .L0 
     /tmp/ccLjD7Lu.s:109    .text:00000000000000c4 .L0 
     /tmp/ccLjD7Lu.s:152    .text:0000000000000110 .L0 
     /tmp/ccLjD7Lu.s:156    .text:000000000000011c .L0 
     /tmp/ccLjD7Lu.s:25     .text:000000000000001c .L7
     /tmp/ccLjD7Lu.s:84     .text:0000000000000090 .L14
     /tmp/ccLjD7Lu.s:199    .text:0000000000000140 .L16
     /tmp/ccLjD7Lu.s:178    .text:000000000000012c .L17
     /tmp/ccLjD7Lu.s:1043   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccLjD7Lu.s:2129   .debug_str:0000000000000596 .LASF103
     /tmp/ccLjD7Lu.s:2021   .debug_str:0000000000000284 .LASF104
     /tmp/ccLjD7Lu.s:2155   .debug_str:0000000000000748 .LASF105
     /tmp/ccLjD7Lu.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccLjD7Lu.s:229    .text:0000000000000158 .Letext0
     /tmp/ccLjD7Lu.s:1929   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccLjD7Lu.s:2055   .debug_str:000000000000039c .LASF0
     /tmp/ccLjD7Lu.s:2071   .debug_str:00000000000003dc .LASF1
     /tmp/ccLjD7Lu.s:2035   .debug_str:0000000000000305 .LASF2
     /tmp/ccLjD7Lu.s:2007   .debug_str:000000000000023e .LASF4
     /tmp/ccLjD7Lu.s:2105   .debug_str:00000000000004c9 .LASF3
     /tmp/ccLjD7Lu.s:1949   .debug_str:0000000000000071 .LASF5
     /tmp/ccLjD7Lu.s:2075   .debug_str:00000000000003f6 .LASF6
GAS LISTING /tmp/ccLjD7Lu.s 			page 12


     /tmp/ccLjD7Lu.s:2053   .debug_str:0000000000000389 .LASF7
     /tmp/ccLjD7Lu.s:2139   .debug_str:00000000000006b7 .LASF8
     /tmp/ccLjD7Lu.s:1993   .debug_str:00000000000001c0 .LASF9
     /tmp/ccLjD7Lu.s:2085   .debug_str:000000000000042f .LASF10
     /tmp/ccLjD7Lu.s:2133   .debug_str:0000000000000673 .LASF11
     /tmp/ccLjD7Lu.s:1951   .debug_str:0000000000000078 .LASF12
     /tmp/ccLjD7Lu.s:1935   .debug_str:0000000000000022 .LASF13
     /tmp/ccLjD7Lu.s:1957   .debug_str:00000000000000a6 .LASF14
     /tmp/ccLjD7Lu.s:2097   .debug_str:0000000000000485 .LASF15
     /tmp/ccLjD7Lu.s:1963   .debug_str:00000000000000d6 .LASF16
     /tmp/ccLjD7Lu.s:2005   .debug_str:0000000000000236 .LASF43
     /tmp/ccLjD7Lu.s:1939   .debug_str:000000000000003b .LASF106
     /tmp/ccLjD7Lu.s:2137   .debug_str:00000000000006ae .LASF17
     /tmp/ccLjD7Lu.s:2079   .debug_str:0000000000000414 .LASF19
     /tmp/ccLjD7Lu.s:2077   .debug_str:0000000000000409 .LASF21
     /tmp/ccLjD7Lu.s:2033   .debug_str:00000000000002ea .LASF23
     /tmp/ccLjD7Lu.s:2037   .debug_str:0000000000000313 .LASF18
     /tmp/ccLjD7Lu.s:2031   .debug_str:00000000000002cf .LASF20
     /tmp/ccLjD7Lu.s:2029   .debug_str:00000000000002c2 .LASF22
     /tmp/ccLjD7Lu.s:2087   .debug_str:000000000000043e .LASF24
     /tmp/ccLjD7Lu.s:1989   .debug_str:000000000000019a .LASF27
     /tmp/ccLjD7Lu.s:2045   .debug_str:0000000000000342 .LASF29
     /tmp/ccLjD7Lu.s:2149   .debug_str:0000000000000720 .LASF59
     /tmp/ccLjD7Lu.s:2141   .debug_str:00000000000006c7 .LASF61
     /tmp/ccLjD7Lu.s:2019   .debug_str:0000000000000277 .LASF25
     /tmp/ccLjD7Lu.s:2147   .debug_str:00000000000006fc .LASF26
     /tmp/ccLjD7Lu.s:2091   .debug_str:000000000000046e .LASF107
     /tmp/ccLjD7Lu.s:2099   .debug_str:000000000000049b .LASF28
     /tmp/ccLjD7Lu.s:2123   .debug_str:0000000000000569 .LASF30
     /tmp/ccLjD7Lu.s:2059   .debug_str:00000000000003b0 .LASF31
     /tmp/ccLjD7Lu.s:2121   .debug_str:0000000000000552 .LASF32
     /tmp/ccLjD7Lu.s:2069   .debug_str:00000000000003d6 .LASF33
     /tmp/ccLjD7Lu.s:2113   .debug_str:0000000000000503 .LASF34
     /tmp/ccLjD7Lu.s:1973   .debug_str:0000000000000139 .LASF108
     /tmp/ccLjD7Lu.s:2145   .debug_str:00000000000006ef .LASF35
     /tmp/ccLjD7Lu.s:2101   .debug_str:00000000000004a1 .LASF36
     /tmp/ccLjD7Lu.s:1991   .debug_str:00000000000001b0 .LASF37
     /tmp/ccLjD7Lu.s:1979   .debug_str:000000000000015d .LASF38
     /tmp/ccLjD7Lu.s:2111   .debug_str:00000000000004f3 .LASF39
     /tmp/ccLjD7Lu.s:2009   .debug_str:0000000000000245 .LASF41
     /tmp/ccLjD7Lu.s:2117   .debug_str:000000000000052c .LASF40
     /tmp/ccLjD7Lu.s:2049   .debug_str:000000000000036d .LASF42
     /tmp/ccLjD7Lu.s:2131   .debug_str:000000000000065a .LASF44
     /tmp/ccLjD7Lu.s:2013   .debug_str:000000000000025f .LASF45
     /tmp/ccLjD7Lu.s:2061   .debug_str:00000000000003b9 .LASF46
     /tmp/ccLjD7Lu.s:2065   .debug_str:00000000000003c6 .LASF47
     /tmp/ccLjD7Lu.s:2011   .debug_str:0000000000000256 .LASF48
     /tmp/ccLjD7Lu.s:2017   .debug_str:000000000000026f .LASF49
     /tmp/ccLjD7Lu.s:2025   .debug_str:000000000000029c .LASF109
     /tmp/ccLjD7Lu.s:1997   .debug_str:00000000000001e4 .LASF110
     /tmp/ccLjD7Lu.s:2143   .debug_str:00000000000006e1 .LASF91
     /tmp/ccLjD7Lu.s:2135   .debug_str:0000000000000682 .LASF93
     /tmp/ccLjD7Lu.s:2107   .debug_str:00000000000004db .LASF111
     /tmp/ccLjD7Lu.s:2023   .debug_str:0000000000000291 .LASF50
     /tmp/ccLjD7Lu.s:2001   .debug_str:0000000000000215 .LASF51
     /tmp/ccLjD7Lu.s:2067   .debug_str:00000000000003d0 .LASF52
     /tmp/ccLjD7Lu.s:2093   .debug_str:0000000000000473 .LASF53
GAS LISTING /tmp/ccLjD7Lu.s 			page 13


     /tmp/ccLjD7Lu.s:2153   .debug_str:0000000000000730 .LASF54
     /tmp/ccLjD7Lu.s:1947   .debug_str:0000000000000063 .LASF55
     /tmp/ccLjD7Lu.s:1971   .debug_str:000000000000011e .LASF56
     /tmp/ccLjD7Lu.s:1983   .debug_str:0000000000000172 .LASF57
     /tmp/ccLjD7Lu.s:1933   .debug_str:0000000000000008 .LASF58
     /tmp/ccLjD7Lu.s:1937   .debug_str:0000000000000032 .LASF60
     /tmp/ccLjD7Lu.s:2115   .debug_str:0000000000000517 .LASF62
     /tmp/ccLjD7Lu.s:1969   .debug_str:0000000000000115 .LASF63
     /tmp/ccLjD7Lu.s:1967   .debug_str:0000000000000100 .LASF64
     /tmp/ccLjD7Lu.s:2109   .debug_str:00000000000004ec .LASF65
     /tmp/ccLjD7Lu.s:2089   .debug_str:000000000000045b .LASF66
     /tmp/ccLjD7Lu.s:2127   .debug_str:000000000000058f .LASF67
     /tmp/ccLjD7Lu.s:2119   .debug_str:000000000000053f .LASF68
     /tmp/ccLjD7Lu.s:1987   .debug_str:0000000000000192 .LASF69
     /tmp/ccLjD7Lu.s:1965   .debug_str:00000000000000ec .LASF70
     /tmp/ccLjD7Lu.s:1931   .debug_str:0000000000000000 .LASF71
     /tmp/ccLjD7Lu.s:1999   .debug_str:0000000000000201 .LASF72
     /tmp/ccLjD7Lu.s:1975   .debug_str:0000000000000141 .LASF73
     /tmp/ccLjD7Lu.s:1953   .debug_str:0000000000000088 .LASF74
     /tmp/ccLjD7Lu.s:2157   .debug_str:0000000000000765 .LASF75
     /tmp/ccLjD7Lu.s:1977   .debug_str:0000000000000149 .LASF76
     /tmp/ccLjD7Lu.s:2057   .debug_str:00000000000003a9 .LASF77
     /tmp/ccLjD7Lu.s:1945   .debug_str:0000000000000050 .LASF78
     /tmp/ccLjD7Lu.s:1943   .debug_str:0000000000000049 .LASF79
     /tmp/ccLjD7Lu.s:1985   .debug_str:000000000000017f .LASF80
     /tmp/ccLjD7Lu.s:2047   .debug_str:0000000000000367 .LASF81
     /tmp/ccLjD7Lu.s:2125   .debug_str:000000000000057d .LASF82
     /tmp/ccLjD7Lu.s:1941   .debug_str:0000000000000043 .LASF83
     /tmp/ccLjD7Lu.s:2159   .debug_str:000000000000076d .LASF84
     /tmp/ccLjD7Lu.s:2051   .debug_str:000000000000037e .LASF85
     /tmp/ccLjD7Lu.s:2103   .debug_str:00000000000004b1 .LASF86
     /tmp/ccLjD7Lu.s:2015   .debug_str:0000000000000264 .LASF87
     /tmp/ccLjD7Lu.s:2027   .debug_str:00000000000002aa .LASF88
     /tmp/ccLjD7Lu.s:1955   .debug_str:000000000000009c .LASF89
     /tmp/ccLjD7Lu.s:2003   .debug_str:0000000000000220 .LASF90
     /tmp/ccLjD7Lu.s:2043   .debug_str:0000000000000338 .LASF92
     /tmp/ccLjD7Lu.s:1995   .debug_str:00000000000001ce .LASF94
     /tmp/ccLjD7Lu.s:1981   .debug_str:000000000000016d .LASF95
     /tmp/ccLjD7Lu.s:2083   .debug_str:000000000000042a .LASF96
     /tmp/ccLjD7Lu.s:129    .text:00000000000000e8 .LFB40
     /tmp/ccLjD7Lu.s:215    .text:0000000000000158 .LFE40
     /tmp/ccLjD7Lu.s:2063   .debug_str:00000000000003bf .LASF97
     /tmp/ccLjD7Lu.s:1874   .debug_loc:0000000000000000 .LLST2
     /tmp/ccLjD7Lu.s:158    .text:0000000000000124 .LBB6
     /tmp/ccLjD7Lu.s:170    .text:0000000000000128 .LBE6
     /tmp/ccLjD7Lu.s:182    .text:000000000000012c .LBB8
     /tmp/ccLjD7Lu.s:190    .text:0000000000000130 .LBE8
     /tmp/ccLjD7Lu.s:1881   .debug_loc:0000000000000023 .LLST3
     /tmp/ccLjD7Lu.s:147    .text:000000000000010c .LVL8
     /tmp/ccLjD7Lu.s:196    .text:000000000000013c .LVL14
     /tmp/ccLjD7Lu.s:2041   .debug_str:000000000000032c .LASF98
     /tmp/ccLjD7Lu.s:1959   .debug_str:00000000000000b2 .LASF99
     /tmp/ccLjD7Lu.s:70     .text:0000000000000074 .LFB39
     /tmp/ccLjD7Lu.s:123    .text:00000000000000e8 .LFE39
     /tmp/ccLjD7Lu.s:2073   .debug_str:00000000000003ef .LASF102
     /tmp/ccLjD7Lu.s:1888   .debug_loc:0000000000000046 .LLST1
     /tmp/ccLjD7Lu.s:101    .text:00000000000000b8 .LVL6
GAS LISTING /tmp/ccLjD7Lu.s 			page 14


     /tmp/ccLjD7Lu.s:106    .text:00000000000000c4 .LVL7
     /tmp/ccLjD7Lu.s:2039   .debug_str:000000000000031f .LASF100
     /tmp/ccLjD7Lu.s:1961   .debug_str:00000000000000c3 .LASF101
     /tmp/ccLjD7Lu.s:10     .text:0000000000000000 .LFB38
     /tmp/ccLjD7Lu.s:64     .text:0000000000000074 .LFE38
     /tmp/ccLjD7Lu.s:1902   .debug_loc:000000000000007f .LLST0
     /tmp/ccLjD7Lu.s:40     .text:0000000000000038 .LVL2
     /tmp/ccLjD7Lu.s:47     .text:0000000000000050 .LVL3
     /tmp/ccLjD7Lu.s:2151   .debug_str:000000000000072b .LASF112
     /tmp/ccLjD7Lu.s:2081   .debug_str:0000000000000424 .LASF113
     /tmp/ccLjD7Lu.s:2095   .debug_str:000000000000047e .LASF114
     /tmp/ccLjD7Lu.s:149    .text:0000000000000110 .LVL9
     /tmp/ccLjD7Lu.s:210    .text:0000000000000150 .LVL15
     /tmp/ccLjD7Lu.s:181    .text:000000000000012c .LVL12
     /tmp/ccLjD7Lu.s:188    .text:0000000000000130 .LVL13
     /tmp/ccLjD7Lu.s:73     .text:0000000000000074 .LVL4
     /tmp/ccLjD7Lu.s:97     .text:00000000000000a8 .LVL5
     /tmp/ccLjD7Lu.s:14     .text:0000000000000000 .LVL0
     /tmp/ccLjD7Lu.s:38     .text:0000000000000030 .LVL1
     /tmp/ccLjD7Lu.s:233    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
__putc
_ZN7_thread12createThreadEPFvPvES0_
_ZN7_thread7runningE
trap
_ZN7_thread5yieldEv
